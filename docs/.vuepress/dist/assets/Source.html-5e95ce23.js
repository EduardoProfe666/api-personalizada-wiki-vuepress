import{_ as e}from"./banner-85030e21.js";import{_ as a,o as c,c as i,e as o}from"./app-ece49f9c.js";const l="/api-personalizada-wiki-vuepress/gifs/source.gif",r={},d=o('<p><img src="'+e+'" alt="a"></p><h1 id="vincular-el-archivo-source-de-la-api" tabindex="-1"><a class="header-anchor" href="#vincular-el-archivo-source-de-la-api" aria-hidden="true">#</a> Vincular el <code>Archivo Source</code> de la api</h1><p>Para poder ver el código fuente de las clases de la api es necesario vincular el archivo source a la api en el <code>Build Path</code> del proyecto.</p><h2 id="eclipse-ide" tabindex="-1"><a class="header-anchor" href="#eclipse-ide" aria-hidden="true">#</a> Eclipse IDE</h2><p>En Eclipse IDE se siguen los siguientes pasos:</p><ol><li>Ir a la configuración del <code>Build Path</code> del proyecto.</li><li>Seleccionar la sección de <code>Libraries</code> y seleccionar la <code>api/apiLite.jar</code>.</li><li>Editar la localización del <code>Source attachment</code>.</li><li>Seleccionar <code>External location</code> y a través de <code>External Folder</code> buscar la carpeta <code>src</code> del código fuente del proyecto.</li></ol><p><img src="'+l+'" alt="a"></p><h2 id="intellij-idea" tabindex="-1"><a class="header-anchor" href="#intellij-idea" aria-hidden="true">#</a> Intellij IDEA</h2><p>En el caso de IntelliJ IDEA no es necesario este procedimiento, puesto que incluye un motor de De-compilación de <code>.class</code> embebido.</p>',9),s=[d];function t(n,p){return c(),i("div",null,s)}const _=a(r,[["render",t],["__file","Source.html.vue"]]);export{_ as default};
