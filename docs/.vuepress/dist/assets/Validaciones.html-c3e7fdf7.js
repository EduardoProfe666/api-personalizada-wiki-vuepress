import{_ as p}from"./banner-85030e21.js";import{_ as l,r as c,o as i,c as u,a as n,d as s,w as t,b as e,e as o}from"./app-ece49f9c.js";const r={},d=o('<p><img src="'+p+`" alt="a"></p><h1 id="validaciones" tabindex="-1"><a class="header-anchor" href="#validaciones" aria-hidden="true">#</a> Validaciones</h1><p>Clase de utilidades que contiene algunas de las validaciones esenciales, incluyendo trabajo con <code>String</code>, <code>List</code>, <code>Date</code>, números y validaciones referentes al carnet de identidad cubano.</p><p>El acceso a estos métodos es de manera estática. Por ejemplo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNumeroRango</span><span class="token punctuation">(</span><span class="token number">20.3</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="indice-de-contenido" tabindex="-1"><a class="header-anchor" href="#indice-de-contenido" aria-hidden="true">#</a> Índice de contenido</h2>`,6),k={class:"table-of-contents"},m=o(`<h2 id="metodos-implementados" tabindex="-1"><a class="header-anchor" href="#metodos-implementados" aria-hidden="true">#</a> Métodos implementados</h2><ul><li><a href="#validar-n%C3%BAmero-en-un-rango-dado">Validar número en un rango dado</a></li><li><a href="#validar-un-string-con-un-tama%C3%B1o-en-un-rango-dado">Validar un String con un tamaño en un rango dado</a></li><li><a href="#validar-que-un-string-tenga-solo-letras">Validar que un String tenga solo letras</a></li><li><a href="#validar-que-un-string-tenga-solo-d%C3%ADgitos">Validar que un String tenga solo dígitos</a></li><li><a href="#validar-que-un-string-sea-alfanum%C3%A9rico-sin-espacios">Validar que un String sea alfanumérico sin espacios</a></li><li><a href="#validar-que-un-string-no-sea-todo-espacios">Validar que un String no sea todo espacios</a></li><li><a href="#validar-que-un-string-no-est%C3%A9-vac%C3%ADo">Validar que un String no esté vacío</a></li><li><a href="#validar-que-un-string-no-tenga-espacios">Validar que un String no tenga espacios</a></li><li><a href="#validar-la-no-repetici%C3%B3n-en-una-lista">Validar la no repetición en una lista</a></li><li><a href="#validar-la-no-repetici%C3%B3n-en-una-lista-dado-un-comparator">Validar la no repetición en una lista dado un Comparator</a></li><li><a href="#validar-la-no-repetici%C3%B3n-de-un-elemento-dado-en-una-lista">Validar la no repetición de un elemento dado en una lista</a></li><li><a href="#validar-la-no-repetici%C3%B3n-de-un-elemento-dado-en-una-lista-dado-un-comparator">Validar la no repetición de un elemento dado en una lista dado un Comparator</a></li><li><a href="#validar-la-no-repetici%C3%B3n-en-las-listas-pasadas">Validar la no repetición en las listas pasadas</a></li><li><a href="#validar-que-el-ci-tenga-la-fecha-de-nacimiento-en-el-rango-de-2-fechas-dadas">Validar que el CI tenga la fecha de nacimiento en el rango de 2 fechas dadas</a></li><li><a href="#validar-ci-v%C3%A1lido-con-una-fecha-de-nacimiento-en-un-rango-de-2-fechas">Validar CI válido con una fecha de nacimiento en un rango de 2 fechas</a></li><li><a href="#validar-que-la-fecha-est%C3%A9-en-un-rango-de-2-fechas-dadas">Validar que la fecha esté en un rango de 2 fechas dadas</a></li><li><a href="#validar-que-los-calendars-sean-del-mismo-d%C3%ADa">Validar que los Calendars sean del mismo día</a></li><li><a href="#validar-que-los-dates-sean-del-mismo-d%C3%ADa">Validar que los Dates sean del mismo día</a></li></ul><h3 id="validar-numero-en-un-rango-dado" tabindex="-1"><a class="header-anchor" href="#validar-numero-en-un-rango-dado" aria-hidden="true">#</a> Validar número en un rango dado</h3><ul><li><strong>Arquetipo:</strong> <code>validarNumeroRango(double, double, double)</code></li><li><strong>Parámetros:</strong> <code>double</code> valor, 2 <code>double</code> rangos mínimo y máximo.</li><li><strong>Descripción:</strong> Método que permitirá validar si un valor se encuentra en un rango dado.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el rango mínimo es mayor que el rango máximo.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNumerorRango</span><span class="token punctuation">(</span><span class="token number">5.8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-un-string-con-un-tamano-en-un-rango-dado" tabindex="-1"><a class="header-anchor" href="#validar-un-string-con-un-tamano-en-un-rango-dado" aria-hidden="true">#</a> Validar un String con un tamaño en un rango dado</h3><ul><li><strong>Arquetipo:</strong> <code>validarTamString(String, int, int)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar, 2 <code>int</code> tamaños mínimo y máximos.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> tiene un tamaño en un rango dado.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code> o el tamaño mínimo es mayor que el tamaño máximo.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarTamString</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-un-string-tenga-solo-letras" tabindex="-1"><a class="header-anchor" href="#validar-que-un-string-tenga-solo-letras" aria-hidden="true">#</a> Validar que un String tenga solo letras</h3><ul><li><strong>Arquetipo:</strong> <code>validarStringTodoLetra(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> está compuesto solo por letras, incluyendo los espacios.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarStringTodoLetra</span><span class="token punctuation">(</span><span class="token string">&quot;abc7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-un-string-tenga-solo-digitos" tabindex="-1"><a class="header-anchor" href="#validar-que-un-string-tenga-solo-digitos" aria-hidden="true">#</a> Validar que un String tenga solo dígitos</h3><ul><li><strong>Arquetipo:</strong> <code>validarStringTodoDigito(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> está compuesto solo por dígitos.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarStringTodoDigito</span><span class="token punctuation">(</span><span class="token string">&quot;87&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-un-string-sea-alfanumerico-sin-espacios" tabindex="-1"><a class="header-anchor" href="#validar-que-un-string-sea-alfanumerico-sin-espacios" aria-hidden="true">#</a> Validar que un String sea alfanumérico sin espacios</h3><ul><li><strong>Arquetipo:</strong> <code>validarStringTodoDigitoLetraSinEspacio(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> está compuesta solo por dígitos y letras, sin espacios.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarStringTodoDigitoLetraSinEspacio</span><span class="token punctuation">(</span><span class="token string">&quot; 7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-un-string-no-sea-todo-espacios" tabindex="-1"><a class="header-anchor" href="#validar-que-un-string-no-sea-todo-espacios" aria-hidden="true">#</a> Validar que un String no sea todo espacios</h3><ul><li><strong>Arquetipo:</strong> <code>validarStringNoTodoEspacio(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> está compuesto no solo por espacios.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarStringNoTodoEspacio</span><span class="token punctuation">(</span><span class="token string">&quot; hh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-un-string-no-este-vacio" tabindex="-1"><a class="header-anchor" href="#validar-que-un-string-no-este-vacio" aria-hidden="true">#</a> Validar que un String no esté vacío</h3><ul><li><strong>Arquetipo:</strong> <code>validarStringNoVacio(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> no es <code>null</code> ni está vacío (<code>&quot;&quot;</code>).</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarStringNoVacio</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-un-string-no-tenga-espacios" tabindex="-1"><a class="header-anchor" href="#validar-que-un-string-no-tenga-espacios" aria-hidden="true">#</a> Validar que un String no tenga espacios</h3><ul><li><strong>Arquetipo:</strong> <code>validarStringNoEspacio(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> a validar.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> no se componga solamente por espacios.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el string es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarStringNoEspacio</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-la-no-repeticion-en-una-lista" tabindex="-1"><a class="header-anchor" href="#validar-la-no-repeticion-en-una-lista" aria-hidden="true">#</a> Validar la no repetición en una lista</h3><ul><li><strong>Arquetipo:</strong> <code>validarNoRepeticionLista(List)</code></li><li><strong>Parámetros:</strong> <code>List</code> de elementos.</li><li><strong>Descripción:</strong> Método que permitirá validar la no repetición de los elementos de la lista.</li><li><strong>Particularidades:</strong> En esta implementación los elementos de la lista pasada deben implementar la interfaz <code>Comparable</code>, pues el algoritmo emplea el orden natural de los mismos. Retorna <code>false</code> si alguno de los parámetros es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNoRepeticionLista</span><span class="token punctuation">(</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-la-no-repeticion-en-una-lista-dado-un-comparator" tabindex="-1"><a class="header-anchor" href="#validar-la-no-repeticion-en-una-lista-dado-un-comparator" aria-hidden="true">#</a> Validar la no repetición en una lista dado un Comparator</h3><ul><li><strong>Arquetipo:</strong> <code>validarNoRepeticionLista(List, Comparator)</code></li><li><strong>Parámetros:</strong> <code>List</code> de elementos y <code>Comparator</code>.</li><li><strong>Descripción:</strong> Método que permitirá validar la no repetición de los elementos de la lista.</li><li><strong>Particularidades:</strong> En esta implementación se debe pasar un <code>Comparator</code> que indique el orden de los elementos de la lista, pues es empleado en el algoritmo. Retorna <code>false</code> si alguno de los parámetros es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNoRepeticionLista</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">reverseOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-la-no-repeticion-de-un-elemento-dado-en-una-lista" tabindex="-1"><a class="header-anchor" href="#validar-la-no-repeticion-de-un-elemento-dado-en-una-lista" aria-hidden="true">#</a> Validar la no repetición de un elemento dado en una lista</h3><ul><li><strong>Arquetipo:</strong> <code>validarNoRepeticionElementoLista(List, Comparable)</code></li><li><strong>Parámetros:</strong> <code>List</code> de elementos y elemento.</li><li><strong>Descripción:</strong> Método que permitirá validar la no repetición de un elemento en una lista.</li><li><strong>Particularidades:</strong> En esta implementación los elementos de la lista pasada deben implementar la interfaz <code>Comparable</code>, pues es el algoritmo emplea el orden natural de los mismos. Retorna <code>false</code> si alguno de los parámetros es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNoRepeticionElementoLista</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-la-no-repeticion-de-un-elemento-dado-en-una-lista-dado-un-comparator" tabindex="-1"><a class="header-anchor" href="#validar-la-no-repeticion-de-un-elemento-dado-en-una-lista-dado-un-comparator" aria-hidden="true">#</a> Validar la no repetición de un elemento dado en una lista dado un Comparator</h3><ul><li><strong>Arquetipo:</strong> <code>validarNoRepeticionElementoLista(List, Object, Comparator)</code></li><li><strong>Parámetros:</strong> <code>List</code> de elementos, elemento y <code>Comparator</code>.</li><li><strong>Descripción:</strong> Método que permitirá validar la no repetición de un elemento en una lista.</li><li><strong>Particularidades:</strong> En esta implementación se debe pasar un <code>Comparator</code> que indique el orden de los elementos de la lista, pues es empleado en el algoritmo. Retorna <code>false</code> si alguno los parámetros es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNoRepeticionElementoLista</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">reverseOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-la-no-repeticion-en-las-listas-pasadas" tabindex="-1"><a class="header-anchor" href="#validar-la-no-repeticion-en-las-listas-pasadas" aria-hidden="true">#</a> Validar la no repetición en las listas pasadas</h3><ul><li><strong>Arquetipo:</strong> <code>validarNoRepeticionListas(List...)</code></li><li><strong>Parámetros:</strong> Serie o arreglo de <code>List</code> de elementos.</li><li><strong>Descripción:</strong> Método para validar que las listas pasadas no contengan elementos en común.</li><li><strong>Particularidades:</strong> Para usarlo se pueden pasar listas separadas por comas, o un arreglo de listas. Retorna <code>false</code> si alguna de las listas es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarNoRepeticionListas</span><span class="token punctuation">(</span>lista1<span class="token punctuation">,</span> lista2<span class="token punctuation">,</span> lista3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-el-ci-tenga-la-fecha-de-nacimiento-en-el-rango-de-2-fechas-dadas" tabindex="-1"><a class="header-anchor" href="#validar-que-el-ci-tenga-la-fecha-de-nacimiento-en-el-rango-de-2-fechas-dadas" aria-hidden="true">#</a> Validar que el CI tenga la fecha de nacimiento en el rango de 2 fechas dadas</h3><ul><li><strong>Arquetipo:</strong> <code>validarFechaNacimientoCi(String, Date, Date)</code></li><li><strong>Parámetros:</strong> <code>String</code> ci y rango de fechas de nacimiento.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code>, que corresponde a un carnet de identidad, contenga una fecha de nacimiento válida, dado un rango de fechas.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el <code>String</code> ci es <code>null</code>. No se comprobará que el ci tenga fecha de nacimiento mínima si esta es <code>null</code>. No se comprobará que el ci tenga fecha de nacimiento máxima si esta es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarFechaNacimientoCi</span><span class="token punctuation">(</span><span class="token string">&quot;02022368423&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-ci-valido-con-una-fecha-de-nacimiento-en-un-rango-de-2-fechas" tabindex="-1"><a class="header-anchor" href="#validar-ci-valido-con-una-fecha-de-nacimiento-en-un-rango-de-2-fechas" aria-hidden="true">#</a> Validar CI válido con una fecha de nacimiento en un rango de 2 fechas</h3><ul><li><strong>Arquetipo:</strong> <code>validarCI(String, Date, Date)</code></li><li><strong>Parámetros:</strong> <code>String</code> ci y rango de fechas de nacimiento.</li><li><strong>Descripción:</strong> Método que permitirá validar si un <code>String</code> corresponde a un verdadero carnet de identidad.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si el <code>String</code> ci es <code>null</code>. No se comprobará que el ci tenga fecha de nacimiento mínima si esta es <code>null</code>. No se comprobará que el ci tenga fecha de nacimiento máxima si esta es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarCI</span><span class="token punctuation">(</span><span class="token string">&quot;0813246845&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-la-fecha-este-en-un-rango-de-2-fechas-dadas" tabindex="-1"><a class="header-anchor" href="#validar-que-la-fecha-este-en-un-rango-de-2-fechas-dadas" aria-hidden="true">#</a> Validar que la fecha esté en un rango de 2 fechas dadas</h3><ul><li><strong>Arquetipo:</strong> <code>validarRangoFecha(Date, Date, Date)</code></li><li><strong>Parámetros:</strong> <code>Date</code> fecha y el rango de fechas.</li><li><strong>Descripción:</strong> Método que permitirá validar si un Date se encuentra en un rango determinado.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si alguno de los parámetros es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Date</span> d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> d3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarCI</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span>d2<span class="token punctuation">,</span>d3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-los-calendars-sean-del-mismo-dia" tabindex="-1"><a class="header-anchor" href="#validar-que-los-calendars-sean-del-mismo-dia" aria-hidden="true">#</a> Validar que los Calendars sean del mismo día</h3><ul><li><strong>Arquetipo:</strong> <code>validarCalendarsMismoDia(Calendar, Calendar)</code></li><li><strong>Parámetros:</strong> 2 <code>Calendar</code></li><li><strong>Descripción:</strong> Método para validar que dos <code>Calendar</code> representen el mismo día.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si alguno de los <code>Calendar</code> es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarCalendarsMismoDia</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//b=true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="validar-que-los-dates-sean-del-mismo-dia" tabindex="-1"><a class="header-anchor" href="#validar-que-los-dates-sean-del-mismo-dia" aria-hidden="true">#</a> Validar que los Dates sean del mismo día</h3><ul><li><strong>Arquetipo:</strong> <code>validarDatesMismoDia(Date, Date)</code></li><li><strong>Parámetros:</strong> 2 <code>Date</code></li><li><strong>Descripción:</strong> Método para validar que dos <code>Date</code> representen el mismo día.</li><li><strong>Particularidades:</strong> Retorna <code>false</code> si alguno de los <code>Date</code> es <code>null</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token class-name">Validaciones</span><span class="token punctuation">.</span><span class="token function">validarDatesMismoDia</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//b=false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Validaciones</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Validaciones</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarNumeroRango</span><span class="token punctuation">(</span><span class="token keyword">double</span> valor<span class="token punctuation">,</span> <span class="token keyword">double</span> minV<span class="token punctuation">,</span> <span class="token keyword">double</span> maxV<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> minV<span class="token operator">&lt;=</span>maxV<span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> valor<span class="token operator">&gt;=</span>minV <span class="token operator">&amp;&amp;</span> valor<span class="token operator">&lt;=</span>maxV<span class="token punctuation">;</span>

			<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarTamString</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> s<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> min<span class="token operator">&lt;=</span>max<span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span>min <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span>max<span class="token punctuation">;</span>

			<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarStringTodoLetra</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> s<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> esValido<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isLetter</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarStringTodoDigito</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> s<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> esValido<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarStringTodoDigitoLetraSinEspacio</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> s<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> esValido<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isDigit</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isUpperCase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isLowerCase</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarStringNoTodoEspacio</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>esValido<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
					esValido <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarStringNoVacio</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>s<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarStringNoEspacio</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> esValido<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> <span class="token operator">!</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarFechaNacimientoCi</span><span class="token punctuation">(</span><span class="token class-name">String</span> ci<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMin<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> ci<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">int</span> siglo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> digitoMilenio <span class="token operator">=</span> <span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span>ci<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span>digitoMilenio<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">)</span>
				siglo<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
			<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>digitoMilenio<span class="token operator">&lt;=</span><span class="token number">8</span><span class="token punctuation">)</span>
				siglo<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">;</span>
			<span class="token keyword">else</span>
				siglo<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">;</span>

			<span class="token class-name">String</span> anyo <span class="token operator">=</span> <span class="token punctuation">(</span>siglo<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>ci<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span> mes <span class="token operator">=</span> ci<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span> dia <span class="token operator">=</span> ci<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">SimpleDateFormat</span> formato <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;dd/MM/yyyy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			formato<span class="token punctuation">.</span><span class="token function">setLenient</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				formato<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dia<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>mes<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>anyo<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				esValido<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>


		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">Date</span> fecha <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">convertirFechaNacimientoCiDate</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>fechaMin<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
				esValido <span class="token operator">=</span> fecha<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>fechaMin<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>esValido <span class="token operator">&amp;&amp;</span> fechaMax<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
				esValido <span class="token operator">=</span> fecha<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>fechaMax<span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarCI</span><span class="token punctuation">(</span><span class="token class-name">String</span> ci<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMin<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">validarStringNoVacio</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">validarTamString</span><span class="token punctuation">(</span>ci<span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">validarStringTodoDigito</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">validarFechaNacimientoCi</span><span class="token punctuation">(</span>ci<span class="token punctuation">,</span>fechaMin<span class="token punctuation">,</span>fechaMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarRangoFecha</span><span class="token punctuation">(</span><span class="token class-name">Date</span> fecha<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMin<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValida <span class="token operator">=</span> <span class="token punctuation">(</span>fecha<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> fechaMin<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> fechaMax<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValida<span class="token punctuation">)</span>
			esValida <span class="token operator">=</span> <span class="token punctuation">(</span>fecha<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">sumarAnyosFecha</span><span class="token punctuation">(</span>fechaMin<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> fecha<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">sumarAnyosFecha</span><span class="token punctuation">(</span>fechaMax<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValida<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">boolean</span> <span class="token function">validarNoRepeticionLista</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> lista<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValida <span class="token operator">=</span> lista<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>lista<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> esValida<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValida <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span>lista<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>lista<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValida<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">boolean</span> <span class="token function">validarNoRepeticionLista</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> lista<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValida <span class="token operator">=</span> lista<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> c<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>lista<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> esValida<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValida <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span>lista<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>lista<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValida<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">boolean</span> <span class="token function">validarNoRepeticionElementoLista</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> lista<span class="token punctuation">,</span> <span class="token class-name">T</span> elemento<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValida <span class="token operator">=</span> lista<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> elemento<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValida<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span>
			esValida <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span>elemento<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> esValida<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">boolean</span> <span class="token function">validarNoRepeticionElementoLista</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> lista<span class="token punctuation">,</span> <span class="token class-name">T</span> elemento<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValida <span class="token operator">=</span> lista<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> elemento<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> c<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValida<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
			esValida <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span>elemento<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> esValida<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@SafeVarargs</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">boolean</span> <span class="token function">validarNoRepeticionListas</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> listas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValida <span class="token operator">=</span> <span class="token punctuation">(</span>listas<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>listas<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> esValida<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			esValida <span class="token operator">=</span> listas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValida <span class="token operator">&amp;&amp;</span> listas<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>listas<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> esValida<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>listas<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> esValida<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					esValida <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">disjoint</span><span class="token punctuation">(</span>listas<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> listas<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> esValida<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarCalendarsMismoDia</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span> c1<span class="token punctuation">,</span> <span class="token class-name">Calendar</span> c2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> c1<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> c2<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> c1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token operator">==</span>c2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> c1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span><span class="token operator">==</span>c2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> c1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">)</span><span class="token operator">==</span>c2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">validarDatesMismoDia</span><span class="token punctuation">(</span><span class="token class-name">Date</span> d1<span class="token punctuation">,</span> <span class="token class-name">Date</span> d2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> d1<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> d2<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">Calendar</span> c1 <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Calendar</span> c2 <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			c1<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token punctuation">;</span>
			c2<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">;</span>
			esValido <span class="token operator">=</span> <span class="token function">validarCalendarsMismoDia</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>

	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">SimpleDateFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Calendar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Comparator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42);function v(g,b){const a=c("router-link");return i(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[s(a,{to:"#indice-de-contenido"},{default:t(()=>[e("Índice de contenido")]),_:1})]),n("li",null,[s(a,{to:"#metodos-implementados"},{default:t(()=>[e("Métodos implementados")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#validar-numero-en-un-rango-dado"},{default:t(()=>[e("Validar número en un rango dado")]),_:1})]),n("li",null,[s(a,{to:"#validar-un-string-con-un-tamano-en-un-rango-dado"},{default:t(()=>[e("Validar un String con un tamaño en un rango dado")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-un-string-tenga-solo-letras"},{default:t(()=>[e("Validar que un String tenga solo letras")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-un-string-tenga-solo-digitos"},{default:t(()=>[e("Validar que un String tenga solo dígitos")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-un-string-sea-alfanumerico-sin-espacios"},{default:t(()=>[e("Validar que un String sea alfanumérico sin espacios")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-un-string-no-sea-todo-espacios"},{default:t(()=>[e("Validar que un String no sea todo espacios")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-un-string-no-este-vacio"},{default:t(()=>[e("Validar que un String no esté vacío")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-un-string-no-tenga-espacios"},{default:t(()=>[e("Validar que un String no tenga espacios")]),_:1})]),n("li",null,[s(a,{to:"#validar-la-no-repeticion-en-una-lista"},{default:t(()=>[e("Validar la no repetición en una lista")]),_:1})]),n("li",null,[s(a,{to:"#validar-la-no-repeticion-en-una-lista-dado-un-comparator"},{default:t(()=>[e("Validar la no repetición en una lista dado un Comparator")]),_:1})]),n("li",null,[s(a,{to:"#validar-la-no-repeticion-de-un-elemento-dado-en-una-lista"},{default:t(()=>[e("Validar la no repetición de un elemento dado en una lista")]),_:1})]),n("li",null,[s(a,{to:"#validar-la-no-repeticion-de-un-elemento-dado-en-una-lista-dado-un-comparator"},{default:t(()=>[e("Validar la no repetición de un elemento dado en una lista dado un Comparator")]),_:1})]),n("li",null,[s(a,{to:"#validar-la-no-repeticion-en-las-listas-pasadas"},{default:t(()=>[e("Validar la no repetición en las listas pasadas")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-el-ci-tenga-la-fecha-de-nacimiento-en-el-rango-de-2-fechas-dadas"},{default:t(()=>[e("Validar que el CI tenga la fecha de nacimiento en el rango de 2 fechas dadas")]),_:1})]),n("li",null,[s(a,{to:"#validar-ci-valido-con-una-fecha-de-nacimiento-en-un-rango-de-2-fechas"},{default:t(()=>[e("Validar CI válido con una fecha de nacimiento en un rango de 2 fechas")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-la-fecha-este-en-un-rango-de-2-fechas-dadas"},{default:t(()=>[e("Validar que la fecha esté en un rango de 2 fechas dadas")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-los-calendars-sean-del-mismo-dia"},{default:t(()=>[e("Validar que los Calendars sean del mismo día")]),_:1})]),n("li",null,[s(a,{to:"#validar-que-los-dates-sean-del-mismo-dia"},{default:t(()=>[e("Validar que los Dates sean del mismo día")]),_:1})])])]),n("li",null,[s(a,{to:"#codigo-fuente"},{default:t(()=>[e("Código Fuente")]),_:1})]),n("li",null,[s(a,{to:"#clases-utilizadas-importaciones"},{default:t(()=>[e("Clases utilizadas (Importaciones)")]),_:1})])])]),m])}const y=l(r,[["render",v],["__file","Validaciones.html.vue"]]);export{y as default};
