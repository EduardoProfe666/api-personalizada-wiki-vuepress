import{_ as p}from"./banner-85030e21.js";import{_ as l,r as c,o as i,c as u,a as n,d as s,w as e,b as t,e as o}from"./app-ece49f9c.js";const d={},r=o('<p><img src="'+p+'" alt="a"></p><h1 id="modeloprincipaltablemodel" tabindex="-1"><a class="header-anchor" href="#modeloprincipaltablemodel" aria-hidden="true">#</a> ModeloPrincipalTableModel</h1><p>Clase modelo de tabla abstracta que facilita el trabajo con <code>JTable</code>.</p><p>Para su uso solo es necesario adicionarle el comportamiento de como se generan nuevas filas con los elementos atómicos de la lista (los elementos que se van a mostrar en el <code>JTable</code>); definir el número de columnas y sus respectivos nombres en el constructor de la clase hija; además se parametriza el modelo con el objeto atómico de las listas.</p><h2 id="indice-de-contenido" tabindex="-1"><a class="header-anchor" href="#indice-de-contenido" aria-hidden="true">#</a> Índice de contenido</h2>',5),k={class:"table-of-contents"},m=o(`<h2 id="metodos-implementados" tabindex="-1"><a class="header-anchor" href="#metodos-implementados" aria-hidden="true">#</a> Métodos implementados</h2><p><strong>Listado de métodos</strong>:</p><ul><li><a href="#eliminar-filas">Eliminar Filas</a></li><li><a href="#actualizar-dado-list-y-comparator">Actualizar dado List y Comparator</a></li><li><a href="#actualizar-dado-list">Actualizar dado List</a></li><li><a href="#celda-editable">Celda Editable</a></li></ul><h3 id="eliminar-filas" tabindex="-1"><a class="header-anchor" href="#eliminar-filas" aria-hidden="true">#</a> Eliminar Filas</h3><ul><li><strong>Arquetipo:</strong> <code>eliminarFilas()</code></li><li><strong>Descripción:</strong> Permite eliminar enteramente el contenido de la tabla.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">TablaModelo</span> modelo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TablaModelo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Clase que hereda de ModeloPrincipalTableModel</span>
modelo<span class="token punctuation">.</span><span class="token function">eliminarFilas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Elimina el contenido de la tabla</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="actualizar-dado-list-y-comparator" tabindex="-1"><a class="header-anchor" href="#actualizar-dado-list-y-comparator" aria-hidden="true">#</a> Actualizar dado List y Comparator</h3><ul><li><strong>Arquetipo:</strong> <code>actualizar(List, Comparator)</code></li><li><strong>Parámetros:</strong> <code>List</code> de elementos, <code>Comparator</code> de dichos elementos.</li><li><strong>Descripción:</strong> Permite actualizar la tabla con la lista pasada, y ordenarla usando el Comparator pasado.</li><li><strong>Particularidades:</strong> El método primero ordena la lista, luego borra el contenido de la tabla, y adiciona los elementos de la lista a la tabla.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">TablaModelo</span> modelo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TablaModelo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Clase que hereda de ModeloPrincipalTableModel y está parametrizada con Integer</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Lista a mostrar en la tabla</span>
<span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cmp <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">reverseOrder</span><span class="token punctuation">(</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Crea un comparator que permite ordenar la lista de mayor a menor</span>
modelo<span class="token punctuation">.</span><span class="token function">actualizar</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span>cmp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Actualiza la tabla</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="actualizar-dado-list" tabindex="-1"><a class="header-anchor" href="#actualizar-dado-list" aria-hidden="true">#</a> Actualizar dado List</h3><ul><li><strong>Arquetipo:</strong> <code>actualizar(List)</code></li><li><strong>Parámetros:</strong> <code>List</code> de elementos.</li><li><strong>Descripción:</strong> Permite actualizar la tabla con la lista pasada (sin ordenarla).</li><li><strong>Particularidades:</strong> El método primero borra el contenido de la tabla, y adiciona los elementos de la lista a la tabla.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">TablaModelo</span> modelo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TablaModelo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Clase que hereda de ModeloPrincipalTableModel y está parametrizada con Integer</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Lista a mostrar en la tabla</span>
modelo<span class="token punctuation">.</span><span class="token function">actualizar</span><span class="token punctuation">(</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Actualiza la tabla</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="celda-editable" tabindex="-1"><a class="header-anchor" href="#celda-editable" aria-hidden="true">#</a> Celda Editable</h3><ul><li><strong>Arquetipo:</strong> <code>isCellEditable(int,int)</code></li><li><strong>Parámetros:</strong> Fila y columna.</li><li><strong>Descripción:</strong> Se sobreescribió este método para que las celdas de la tabla no sean modificables. Si desea otro comportamiento sobreescribir este método.</li></ul><h2 id="metodos-a-implementar" tabindex="-1"><a class="header-anchor" href="#metodos-a-implementar" aria-hidden="true">#</a> Métodos a implementar</h2><p><strong>Listado de métodos</strong>:</p><ul><li><a href="#adicionar-elementos-at%C3%B3micos">Adicionar elementos atómicos</a></li></ul><h3 id="adicionar-elementos-atomicos" tabindex="-1"><a class="header-anchor" href="#adicionar-elementos-atomicos" aria-hidden="true">#</a> Adicionar elementos atómicos</h3><ul><li><strong>Arquetipo:</strong> <code>adicionar(T)</code></li><li><strong>Parámetros:</strong> <code>T</code> elemento a agregar.</li><li><strong>Descripción:</strong> Permite implementar el comportamiento de cómo se adicionan los elementos atómicos de la lista a la tabla.</li><li><strong>Particularidades:</strong> Se recomienda implementar en este método la manera en que se agregan los elementos atómicos de la lista vinculada con la tabla. Use el método <code>addRow(Object[])</code> para lograr esto.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">//Clase que hereda de ModeloPrincipalTableModel que muestra una lista de números dada en una tabla de una columna</span>
 <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListadoTableModel</span> <span class="token keyword">extends</span> <span class="token class-name">ModeloPrincipalTableModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
     <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
     <span class="token keyword">public</span> <span class="token class-name">ListadoTableModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nombreColumnas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Num&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setColumnIdentifiers</span><span class="token punctuation">(</span>nombreColumnas<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token annotation punctuation">@Override</span>
     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">adicionar</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addRow</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="ejemplo-de-uso" tabindex="-1"><a class="header-anchor" href="#ejemplo-de-uso" aria-hidden="true">#</a> Ejemplo de Uso</h2><p>Para poder usar el modelo se deben seguir los siguientes pasos:</p><ul><li>Crear una clase que herede de <code>ModeloPrincipalTableModel</code></li><li>Parametrizar <code>ModeloPrincipalTableModel</code> con los elementos atómicos de la lista que se va a mostrar en la tabla</li><li>Definir en el constructor de la nueva clase la cantidad y los nombres de las columnas de la tabla</li><li>Implementar el método <code>adicionar(T)</code> el cual va a estar sustituida <code>T</code> por la clase con que se parametrizó <code>ModeloPrincipalTableModel</code></li><li>La implementación de <code>adicionar(T)</code> se basa en definir el comportamiento de cómo se agregan los elementos atómicos de las listas a la tabla, es decir, cómo se agregan las filas.</li></ul><p>Un ejemplo de uso concreto:</p><p><strong><code>Clase Persona:</code></strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//Clase atómica de la lista a mostrar en la tabla</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Persona</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> nombre<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> primerApellido<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> segundoApellido<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">String</span> ci<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>

	<span class="token comment">//Generate Getters, Setters and Constructor</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Clase ListadoTableModel:</code></strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//Clase que hereda de ModeloPrincipalTableModel y permite mostrar adecuadamente los datos de la lista de Persona en la tabla</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListadoTableModel</span> <span class="token keyword">extends</span> <span class="token class-name">ModeloPrincipalTableModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Persona</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">ListadoTableModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nombreColumnas <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Identificador&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Nombre&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Primer Apellido&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Segundo Apellido&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CI&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setColumnIdentifiers</span><span class="token punctuation">(</span>nombreColumnas<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">adicionar</span><span class="token punctuation">(</span><span class="token class-name">Persona</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Integer</span> id <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> nombre <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getNombre</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> pApellido <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getPrimerApellido</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> sApellido <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getSegundoApellido</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> ci <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getCi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addRow</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>id<span class="token punctuation">,</span>nombre<span class="token punctuation">,</span>pApellido<span class="token punctuation">,</span>sApellido<span class="token punctuation">,</span>ci<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>Clase PruebaModeloTabla:</code></strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//Clase que permite probar la tabla</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PruebaModeloTabla</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">JPanel</span> contentPane<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">JTable</span> tablaPersonas<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">ListadoTableModel</span> modelo<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Persona</span><span class="token punctuation">&gt;</span></span> lista<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">PruebaModeloTabla</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		lista <span class="token operator">=</span> <span class="token class-name">Inicializadora</span><span class="token punctuation">.</span><span class="token function">inicializarListadoPersonas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">920</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane<span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EmptyBorder</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setContentPane</span><span class="token punctuation">(</span>contentPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">JScrollPane</span> panelListado <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JScrollPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		panelListado<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">884</span><span class="token punctuation">,</span> <span class="token number">343</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panelListado<span class="token punctuation">)</span><span class="token punctuation">;</span>

		modelo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListadoTableModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		tablaPersonas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		tablaPersonas<span class="token punctuation">.</span><span class="token function">setModel</span><span class="token punctuation">(</span>modelo<span class="token punctuation">)</span><span class="token punctuation">;</span>
		panelListado<span class="token punctuation">.</span><span class="token function">setViewportView</span><span class="token punctuation">(</span>tablaPersonas<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token function">actualizarTabla</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setLocationRelativeTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actualizarTabla</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		modelo<span class="token punctuation">.</span><span class="token function">actualizar</span><span class="token punctuation">(</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ModeloPrincipalTableModel</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">DefaultTableModel</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eliminarFilas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setRowCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">adicionar</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actualizar</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> listado<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> comparador<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span><span class="token punctuation">{</span>
			<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>listado<span class="token punctuation">,</span>comparador<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token function">actualizar</span><span class="token punctuation">(</span>listado<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actualizar</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> listado<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>listado<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">eliminarFilas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">T</span> t <span class="token operator">:</span> listado<span class="token punctuation">)</span>
				<span class="token function">adicionar</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isCellEditable</span><span class="token punctuation">(</span><span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> column<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Comparator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>table<span class="token punctuation">.</span></span><span class="token class-name">DefaultTableModel</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function v(b,g){const a=c("router-link");return i(),u("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[s(a,{to:"#indice-de-contenido"},{default:e(()=>[t("Índice de contenido")]),_:1})]),n("li",null,[s(a,{to:"#metodos-implementados"},{default:e(()=>[t("Métodos implementados")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#eliminar-filas"},{default:e(()=>[t("Eliminar Filas")]),_:1})]),n("li",null,[s(a,{to:"#actualizar-dado-list-y-comparator"},{default:e(()=>[t("Actualizar dado List y Comparator")]),_:1})]),n("li",null,[s(a,{to:"#actualizar-dado-list"},{default:e(()=>[t("Actualizar dado List")]),_:1})]),n("li",null,[s(a,{to:"#celda-editable"},{default:e(()=>[t("Celda Editable")]),_:1})])])]),n("li",null,[s(a,{to:"#metodos-a-implementar"},{default:e(()=>[t("Métodos a implementar")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#adicionar-elementos-atomicos"},{default:e(()=>[t("Adicionar elementos atómicos")]),_:1})])])]),n("li",null,[s(a,{to:"#ejemplo-de-uso"},{default:e(()=>[t("Ejemplo de Uso")]),_:1})]),n("li",null,[s(a,{to:"#codigo-fuente"},{default:e(()=>[t("Código Fuente")]),_:1})]),n("li",null,[s(a,{to:"#clases-utilizadas-importaciones"},{default:e(()=>[t("Clases utilizadas (Importaciones)")]),_:1})])])]),m])}const h=l(d,[["render",v],["__file","ModeloPrincipalTableModel.html.vue"]]);export{h as default};
