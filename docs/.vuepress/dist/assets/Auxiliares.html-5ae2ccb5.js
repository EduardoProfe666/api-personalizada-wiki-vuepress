import{_ as p}from"./banner-85030e21.js";import{_ as c,r as l,o as i,c as u,a as n,d as s,w as e,b as t,e as o}from"./app-ece49f9c.js";const r={},d=o('<p><img src="'+p+`" alt="a"></p><h1 id="auxiliares" tabindex="-1"><a class="header-anchor" href="#auxiliares" aria-hidden="true">#</a> Auxiliares</h1><p>Clase de utilidades que contiene algunos métodos para el trabajo con <code>Date</code> y con el carnet de identidad cubano, además de otros.</p><p>El acceso a estos métodos es de manera estática. Por ejemplo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> ci <span class="token operator">=</span> <span class="token string">&quot;05112568423&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> fechaNacimiento <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">convertirFechaNacimientoCiDate</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="indice-de-contenido" tabindex="-1"><a class="header-anchor" href="#indice-de-contenido" aria-hidden="true">#</a> Índice de contenido</h2>`,6),k={class:"table-of-contents"},m=o(`<h2 id="metodos-implementados" tabindex="-1"><a class="header-anchor" href="#metodos-implementados" aria-hidden="true">#</a> Métodos implementados</h2><ul><li><a href="#extraer-fecha-nacimiento-de-un-ci-en-forma-de-date">Extraer Fecha Nacimiento de un CI en forma de <code>Date</code></a></li><li><a href="#determinar-la-edad-dado-un-date">Determinar la edad dado un <code>Date</code></a></li><li><a href="#determinar-diferencia-en-a%C3%B1os-dados-2-date">Determinar diferencia en años dados 2 <code>Date</code></a></li><li><a href="#determinar-sexo-dado-un-ci-en-forma-de-char">Determinar sexo dado un CI en forma de char</a></li><li><a href="#determinar-sexo-dado-un-ci-en-forma-de-string">Determinar sexo dado un CI en forma de String</a></li><li><a href="#sumar-a%C3%B1os-al-date-dado">Sumar años al <code>Date</code> dado</a></li><li><a href="#determinar-la-cantidad-de-caracteres-de-un-entero">Determinar la cantidad de caracteres de un entero</a></li><li><a href="#introducir-elementos-en-una-lista-de-forma-ordenada">Introducir elementos en una lista de forma ordenada</a></li></ul><h3 id="extraer-fecha-nacimiento-de-un-ci-en-forma-de-date" tabindex="-1"><a class="header-anchor" href="#extraer-fecha-nacimiento-de-un-ci-en-forma-de-date" aria-hidden="true">#</a> Extraer Fecha Nacimiento de un CI en forma de <code>Date</code></h3><ul><li><strong>Arquetipo:</strong> <code>convertirFechaNacimientoCiDate(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> carnet de identidad cubano</li><li><strong>Descripción:</strong> Método para extraer la fecha de nacimiento del carnet de identidad suministrado.</li><li><strong>Particularidades:</strong> Si el <code>String</code> pasado es <strong>null</strong> lanza un <code>IllegalArgumentException</code>. El carnet debe estar en el formato válido para el correcto funcionamiento de este método.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> ci <span class="token operator">=</span> <span class="token string">&quot;05112568423&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> fechaNacimiento <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">convertirFechaNacimientoCiDate</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="determinar-la-edad-dado-un-date" tabindex="-1"><a class="header-anchor" href="#determinar-la-edad-dado-un-date" aria-hidden="true">#</a> Determinar la edad dado un <code>Date</code></h3><ul><li><strong>Arquetipo:</strong> <code>determinarEdad(Date)</code></li><li><strong>Parámetros:</strong> <code>Date</code> fecha de nacimiento</li><li><strong>Descripción:</strong> Método para determinar la edad actual de la persona en dependencia de su fecha de nacimiento.</li><li><strong>Particularidades:</strong> Si la fecha pasada es <strong>null</strong> o es póstuma al día actual lanza un <code>IllegalArgumentException</code></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Date</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> edad <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">determinarEdad</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="determinar-diferencia-en-anos-dados-2-date" tabindex="-1"><a class="header-anchor" href="#determinar-diferencia-en-anos-dados-2-date" aria-hidden="true">#</a> Determinar diferencia en años dados 2 <code>Date</code></h3><ul><li><strong>Arquetipo:</strong> <code>determinarDiferenciaAnyos(Date, Date)</code></li><li><strong>Parámetros:</strong> 2 <code>Date</code> fecha inicial y fecha final.</li><li><strong>Descripción:</strong> Método para determinar la diferencia en años entre dos fechas.</li><li><strong>Particularidades:</strong> Si la fecha inicial es póstuma a la fecha final, o cualquiera de ambas fecha es <code>null</code> lanza un <code>IllegalArgumentException</code></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Date</span> d1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> d2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>  dif <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">determinarDiferenciaAnyos</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span>d2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="determinar-sexo-dado-un-ci-en-forma-de-char" tabindex="-1"><a class="header-anchor" href="#determinar-sexo-dado-un-ci-en-forma-de-char" aria-hidden="true">#</a> Determinar sexo dado un CI en forma de char</h3><ul><li><strong>Arquetipo:</strong> <code>determinarSexo(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> carnet de identidad cubano.</li><li><strong>Descripción:</strong> Método para determinar el sexo de la persona en dependencia de su carnet de identidad. Devuelve un <code>char</code> referente al sexo (&#39;F&#39;-&gt;Femenino, &#39;M&#39;-&gt;Masculino).</li><li><strong>Particularidades:</strong> El carnet de identidad debe ser válido para que el algoritmo funcione. Si el carnet de identidad pasado es <code>null</code> o no tiene longitud 11, se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> ci <span class="token operator">=</span> <span class="token string">&quot;05112568423&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> sexoChar <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">determinarSexo</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="determinar-sexo-dado-un-ci-en-forma-de-string" tabindex="-1"><a class="header-anchor" href="#determinar-sexo-dado-un-ci-en-forma-de-string" aria-hidden="true">#</a> Determinar sexo dado un CI en forma de String</h3><ul><li><strong>Arquetipo:</strong> <code>determinarSexoString(String)</code></li><li><strong>Parámetros:</strong> <code>String</code> carnet de identidad cubano.</li><li><strong>Descripción:</strong> Método para determinar el sexo de la persona en dependencia de su carnet de identidad. Devuelve <code>String</code> referente al sexo (&quot;Femenino&quot;, &quot;Masculino&quot;).</li><li><strong>Particularidades:</strong> El carnet de identidad debe ser válido para que el algoritmo funcione. Si el carnet de identidad pasado es <code>null</code> o no tiene longitud 11, se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="sumar-anos-al-date-dado" tabindex="-1"><a class="header-anchor" href="#sumar-anos-al-date-dado" aria-hidden="true">#</a> Sumar años al <code>Date</code> dado</h3><ul><li><strong>Arquetipo:</strong> <code>sumarAnyosFecha(Date, int)</code></li><li><strong>Parámetros:</strong> <code>Date</code> fecha, <code>int</code> cantidad de años a sumar</li><li><strong>Descripción:</strong> Método para sumar (o restar) años a una fecha dada.</li><li><strong>Particularidades:</strong> Permite incrementar o decrementar una fecha en años, en dependencia del signo del entero pasado. Si la fecha es <code>null</code>se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Date</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> dMod <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">sumarAnyosFecha</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="determinar-la-cantidad-de-caracteres-de-un-entero" tabindex="-1"><a class="header-anchor" href="#determinar-la-cantidad-de-caracteres-de-un-entero" aria-hidden="true">#</a> Determinar la cantidad de caracteres de un entero</h3><ul><li><strong>Arquetipo:</strong> <code>cantidadCaracteresEntero(int)</code></li><li><strong>Parámetros:</strong> <code>int</code> Entero</li><li><strong>Descripción:</strong> Método para determinar la cantidad de caracteres que determinaría un entero en caso de ser <code>String</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> cantCaracteres <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">cantidadCaracteresEntero</span><span class="token punctuation">(</span><span class="token number">3928</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="introducir-elementos-en-una-lista-de-forma-ordenada" tabindex="-1"><a class="header-anchor" href="#introducir-elementos-en-una-lista-de-forma-ordenada" aria-hidden="true">#</a> Introducir elementos en una lista de forma ordenada</h3><ul><li><strong>Arquetipo:</strong> <code>introducirElementoListadoOrdenado(List, Comparable...)</code></li><li><strong>Parámetros:</strong> Lista principal de elementos, Elementos a introducir</li><li><strong>Descripción:</strong> Método para introducir de forma ordenada un elemento (o varios) en una lista. Puede ser empleado para ordenar en una lista una serie de elementos, aunque no es recomendable su uso por la complejidad que podría alcanzar el algoritmo, en caso de que sean numerosos elementos.</li><li><strong>Particularidades:</strong> Emplea una inserción lineal por lo que se puede complicar con demasiados elementos. La lista debe estar previamente ordenada. Si alguno de los parámetros pasados es <code>null</code> se lanza un <code>IllegalArgumentException</code></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> lista <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lista antes de insertar elementos: &quot;</span><span class="token operator">+</span>lista<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">introducirElementoListadoOrdenado</span><span class="token punctuation">(</span>lista<span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">875</span><span class="token punctuation">,</span><span class="token number">3422</span><span class="token punctuation">,</span><span class="token number">467587</span><span class="token punctuation">,</span><span class="token number">231</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lista después de insertar elementos: &quot;</span><span class="token operator">+</span> lista<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Auxiliares</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Date</span> <span class="token function">convertirFechaNacimientoCiDate</span><span class="token punctuation">(</span><span class="token class-name">String</span> ci<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>ci<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">int</span> siglo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token class-name">Date</span> fechaNacimiento <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> digitoMilenio <span class="token operator">=</span> <span class="token class-name">Byte</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token operator">+</span>ci<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>digitoMilenio<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">)</span>
			siglo<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>digitoMilenio<span class="token operator">&lt;=</span><span class="token number">8</span><span class="token punctuation">)</span>
			siglo<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span>
			siglo<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">;</span>

		<span class="token class-name">String</span> anyo <span class="token operator">=</span> <span class="token punctuation">(</span>siglo<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>ci<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> mes <span class="token operator">=</span> ci<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> dia <span class="token operator">=</span> ci<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Calendar</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GregorianCalendar</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>anyo<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>mes<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>dia<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fechaNacimiento <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


		<span class="token keyword">return</span> fechaNacimiento<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">determinarEdad</span><span class="token punctuation">(</span><span class="token class-name">Date</span> fechaNacimientoCi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>fechaNacimientoCi<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> fechaNacimientoCi<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token function">determinarDiferenciaAnyos</span><span class="token punctuation">(</span>fechaNacimientoCi<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">determinarDiferenciaAnyos</span><span class="token punctuation">(</span><span class="token class-name">Date</span> fechaInicial<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaFinal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>fechaInicial<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> fechaFinal<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> fechaInicial<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>fechaFinal<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> difAnyos<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>

		<span class="token class-name">Calendar</span> fechaInic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GregorianCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fechaInic<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>fechaInicial<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Calendar</span> fechaFin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GregorianCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fechaFin<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>fechaFinal<span class="token punctuation">)</span><span class="token punctuation">;</span>

		difAnyos <span class="token operator">=</span> fechaFin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span> <span class="token operator">-</span> fechaInic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> difMeses <span class="token operator">=</span> fechaFin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span> <span class="token operator">-</span> fechaInic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> difDias <span class="token operator">=</span> fechaFin<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">)</span> <span class="token operator">-</span> fechaInic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>difMeses<span class="token operator">&lt;</span><span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>difMeses<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> difDias<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			difAnyos<span class="token operator">--</span><span class="token punctuation">;</span>


		<span class="token keyword">return</span> difAnyos<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">char</span> <span class="token function">determinarSexo</span><span class="token punctuation">(</span><span class="token class-name">String</span> ci<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>ci<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> ci<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">11</span><span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">char</span> sexo <span class="token operator">=</span> <span class="token char">&#39;F&#39;</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> aux <span class="token operator">=</span> ci<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>aux<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
			sexo <span class="token operator">=</span> <span class="token char">&#39;M&#39;</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> sexo<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">determinarSexoString</span><span class="token punctuation">(</span><span class="token class-name">String</span> ci<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">char</span> sexo <span class="token operator">=</span> <span class="token function">determinarSexo</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> sexo <span class="token operator">==</span> <span class="token char">&#39;F&#39;</span> <span class="token operator">?</span> <span class="token string">&quot;Femenino&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Masculino&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Date</span> <span class="token function">sumarAnyosFecha</span><span class="token punctuation">(</span><span class="token class-name">Date</span> fecha<span class="token punctuation">,</span> <span class="token keyword">int</span> cantAnyos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>fecha<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Calendar</span> fechaCalendar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GregorianCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fechaCalendar<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>fecha<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fechaCalendar<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">,</span> fechaCalendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token operator">+</span>cantAnyos<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> fechaCalendar<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">cantidadCaracteresEntero</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@SafeVarargs</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">introducirElementoListadoOrdenado</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> listado<span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>elementos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>elementos<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> listado<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token operator">:</span> elementos<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">T</span> t <span class="token operator">:</span> elementos<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">boolean</span> aux<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>

			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>listado<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> aux<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>listado<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					listado<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
					aux<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token keyword">if</span><span class="token punctuation">(</span>aux<span class="token punctuation">)</span>
				listado<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Calendar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">GregorianCalendar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function v(b,g){const a=l("router-link");return i(),u("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[s(a,{to:"#indice-de-contenido"},{default:e(()=>[t("Índice de contenido")]),_:1})]),n("li",null,[s(a,{to:"#metodos-implementados"},{default:e(()=>[t("Métodos implementados")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#extraer-fecha-nacimiento-de-un-ci-en-forma-de-date"},{default:e(()=>[t("Extraer Fecha Nacimiento de un CI en forma de Date")]),_:1})]),n("li",null,[s(a,{to:"#determinar-la-edad-dado-un-date"},{default:e(()=>[t("Determinar la edad dado un Date")]),_:1})]),n("li",null,[s(a,{to:"#determinar-diferencia-en-anos-dados-2-date"},{default:e(()=>[t("Determinar diferencia en años dados 2 Date")]),_:1})]),n("li",null,[s(a,{to:"#determinar-sexo-dado-un-ci-en-forma-de-char"},{default:e(()=>[t("Determinar sexo dado un CI en forma de char")]),_:1})]),n("li",null,[s(a,{to:"#determinar-sexo-dado-un-ci-en-forma-de-string"},{default:e(()=>[t("Determinar sexo dado un CI en forma de String")]),_:1})]),n("li",null,[s(a,{to:"#sumar-anos-al-date-dado"},{default:e(()=>[t("Sumar años al Date dado")]),_:1})]),n("li",null,[s(a,{to:"#determinar-la-cantidad-de-caracteres-de-un-entero"},{default:e(()=>[t("Determinar la cantidad de caracteres de un entero")]),_:1})]),n("li",null,[s(a,{to:"#introducir-elementos-en-una-lista-de-forma-ordenada"},{default:e(()=>[t("Introducir elementos en una lista de forma ordenada")]),_:1})])])]),n("li",null,[s(a,{to:"#codigo-fuente"},{default:e(()=>[t("Código Fuente")]),_:1})]),n("li",null,[s(a,{to:"#clases-utilizadas-importaciones"},{default:e(()=>[t("Clases utilizadas (Importaciones)")]),_:1})])])]),m])}const w=c(r,[["render",v],["__file","Auxiliares.html.vue"]]);export{w as default};
