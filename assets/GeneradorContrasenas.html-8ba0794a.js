import{_ as p}from"./banner-85030e21.js";import{_ as c,r as i,o as l,c as r,a as n,d as s,w as e,b as t,e as o}from"./app-7e379709.js";const u={},d=o('<p><img src="'+p+`" alt="a"></p><h1 id="generadorcontrasenas" tabindex="-1"><a class="header-anchor" href="#generadorcontrasenas" aria-hidden="true">#</a> GeneradorContrasenas</h1><p>Clase de utilidades que permite la generación de contraseñas de longitud y tipo variable.</p><p>El acceso a estos métodos es de manera estática. Por ejemplo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> pass <span class="token operator">=</span> <span class="token class-name">GeneradorContrase</span>ñas<span class="token punctuation">.</span>generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token class-name">TipoContrase</span>ña<span class="token punctuation">.</span><span class="token constant">ALFABETICA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Nota:</p><p>En la prueba visual de la api, existe una prueba de estas funcionalidades en la sección de <code>Generadores</code>.</p></div><h2 id="indice-de-contenido" tabindex="-1"><a class="header-anchor" href="#indice-de-contenido" aria-hidden="true">#</a> Índice de contenido</h2>`,7),k={class:"table-of-contents"},m=o(`<h2 id="metodos-implementados" tabindex="-1"><a class="header-anchor" href="#metodos-implementados" aria-hidden="true">#</a> Métodos implementados</h2><ul><li><a href="#generar-contrase%C3%B1a-dado-un-tipocontrase%C3%B1a">Generar contraseña dado un TipoContraseña</a></li><li><a href="#generar-contrase%C3%B1a-dado-una-longitud-y-un-tipocontrase%C3%B1a">Generar contraseña dado una longitud y un TipoContraseña</a></li><li><a href="#generar-contrase%C3%B1a-dado-una-longitud-y-una-piscina-de-caracteres">Generar contraseña dado una longitud y una piscina de caracteres</a></li></ul><h3 id="generar-contrasena-dado-un-tipocontrasena" tabindex="-1"><a class="header-anchor" href="#generar-contrasena-dado-un-tipocontrasena" aria-hidden="true">#</a> Generar contraseña dado un TipoContraseña</h3><ul><li><strong>Arquetipo:</strong> <code>generarContraseña(TipoContraseña)</code></li><li><strong>Parámetros:</strong> <code>TipoContraseña</code></li><li><strong>Descripción:</strong> Permite generar una contraseña de longitud variable, teniendo como extremos <code>LONGITUD_MINIMA</code>(10) y <code>LONGITUD_MAXIMA</code>(30). Dicha contraseña se generará con caracteres del tipo especificado.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> pass <span class="token operator">=</span> <span class="token class-name">GeneradorContrase</span>ñas<span class="token punctuation">.</span>generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token class-name">TipoContrase</span>ña<span class="token punctuation">.</span><span class="token constant">ALFABETICA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-contrasena-dado-una-longitud-y-un-tipocontrasena" tabindex="-1"><a class="header-anchor" href="#generar-contrasena-dado-una-longitud-y-un-tipocontrasena" aria-hidden="true">#</a> Generar contraseña dado una longitud y un TipoContraseña</h3><ul><li><strong>Arquetipo:</strong> <code>generarContraseña(int, TipoContraseña)</code></li><li><strong>Parámetros:</strong> Longitud y <code>TipoContraseña</code></li><li><strong>Descripción:</strong> Permite generar una contraseña de longitud proporcionada y con caracteres del tipo especificado.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> pass <span class="token operator">=</span> <span class="token class-name">GeneradorContrase</span>ñas<span class="token punctuation">.</span>generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token class-name">TipoContrase</span>ña<span class="token punctuation">.</span><span class="token constant">ALFABETICA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-contrasena-dado-una-longitud-y-una-piscina-de-caracteres" tabindex="-1"><a class="header-anchor" href="#generar-contrasena-dado-una-longitud-y-una-piscina-de-caracteres" aria-hidden="true">#</a> Generar contraseña dado una longitud y una piscina de caracteres</h3><ul><li><strong>Arquetipo:</strong> <code>generarContraseña(int, CharSequence)</code></li><li><strong>Parámetros:</strong> Longitud y <code>CharSequence</code> piscina de caracteres</li><li><strong>Descripción:</strong> Permite generar una contraseña de longitud proporcionada y con caracteres del <code>CharSequence</code> pasado.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> pass <span class="token operator">=</span> <span class="token class-name">GeneradorContrase</span>ñas<span class="token punctuation">.</span>generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token string">&quot;!@#$*&amp;^)(+{}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="enums" tabindex="-1"><a class="header-anchor" href="#enums" aria-hidden="true">#</a> Enums</h2><p>Los enums son:</p><ul><li><a href="#tipocontrase%C3%B1a">TipoContraseña</a></li></ul><h3 id="tipocontrasena" tabindex="-1"><a class="header-anchor" href="#tipocontrasena" aria-hidden="true">#</a> TipoContraseña</h3><p>Enum que permite modelar los tipos de contraseñas.</p><p>Los tipos de contraseñas actualmente soportados son:</p><ul><li><code>ALFANUMERICA</code>: Permite crear contraseñas de tipo alfanumérico, teniendo como CharSequence base a: <b>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz</b></li><li><code>NUMERICA</code>: Permite crear contraseñas de tipo numérico, teniendo como CharSequence base a: <b>0123456789</b></li><li><code>ALFABETICA</code>: Permite crear contraseñas de tipo alfabético, teniendo como CharSequence base a: <b>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz</b></li><li><code>ALFABETICA_MINUSCULA</code>: Permite crear contraseñas de tipo alfabético minúsculo, teniendo como CharSequence base a: <b>abcdefghijklmnopqrstuvwxyz</b></li><li><code>ALFABETICA_MAYUSCULA</code>: Permite crear contraseñas de tipo alfabético mayúsculo, teniendo como CharSequence base a: <b>ABCDEFGHIJKLMNOPQRSTUVWXYZ</b></li></ul><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GeneradorContrase</span>ñas <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">GeneradorContrase</span>ñ<span class="token function">as</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CharSequence</span> alfaNum <span class="token operator">=</span> <span class="token string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CharSequence</span> num <span class="token operator">=</span> <span class="token string">&quot;0123456789&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CharSequence</span> alfa <span class="token operator">=</span> <span class="token string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CharSequence</span> alfaMayusc <span class="token operator">=</span> <span class="token string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">CharSequence</span> alfaMinusc <span class="token operator">=</span> <span class="token string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">LONGITUD_MINIMA</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">LONGITUD_MAXIMA</span> <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Random</span> rnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">CharSequence</span> <span class="token function">charSequence</span><span class="token punctuation">(</span><span class="token class-name">TipoContrase</span>ña tipoCaracteresContraseña<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CharSequence</span> c <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">switch</span><span class="token punctuation">(</span>tipoCaracteresContraseña<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token constant">ALFANUMERICA</span><span class="token operator">:</span>
			c <span class="token operator">=</span> alfaNum<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">NUMERICA</span><span class="token operator">:</span>
			c <span class="token operator">=</span> num<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">ALFABETICA</span><span class="token operator">:</span>
			c <span class="token operator">=</span> alfa<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">ALFABETICA_MINUSCULA</span><span class="token operator">:</span>
			c <span class="token operator">=</span> alfaMinusc<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">ALFABETICA_MAYUSCULA</span><span class="token operator">:</span>
			c <span class="token operator">=</span> alfaMayusc<span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> c<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token class-name">TipoContrase</span>ña tipoCaracteresContraseña<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span>rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token constant">LONGITUD_MAXIMA</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">-</span><span class="token constant">LONGITUD_MINIMA</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token constant">LONGITUD_MINIMA</span><span class="token punctuation">,</span>
				tipoCaracteresContraseña<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token keyword">int</span> longitud<span class="token punctuation">,</span><span class="token class-name">TipoContrase</span>ña tipoCaracteresContraseña<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span>longitud<span class="token punctuation">,</span> <span class="token function">charSequence</span><span class="token punctuation">(</span>tipoCaracteresContraseña<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> generarContraseñ<span class="token function">a</span><span class="token punctuation">(</span><span class="token keyword">int</span> longitud<span class="token punctuation">,</span> <span class="token class-name">CharSequence</span> caracteres<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">StringBuilder</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>longitud<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> tamCs <span class="token operator">=</span> caracteres<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">while</span><span class="token punctuation">(</span>longitud<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			s<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>caracteres<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>tamCs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">enum</span> <span class="token class-name">TipoContrase</span>ña<span class="token punctuation">{</span>

		<span class="token constant">ALFANUMERICA</span><span class="token punctuation">,</span>

		<span class="token constant">NUMERICA</span><span class="token punctuation">,</span>

		<span class="token constant">ALFABETICA</span><span class="token punctuation">,</span>

		<span class="token constant">ALFABETICA_MINUSCULA</span><span class="token punctuation">,</span>

		<span class="token constant">ALFABETICA_MAYUSCULA</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,19);function v(b,g){const a=i("router-link");return l(),r("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[s(a,{to:"#indice-de-contenido"},{default:e(()=>[t("Índice de contenido")]),_:1})]),n("li",null,[s(a,{to:"#metodos-implementados"},{default:e(()=>[t("Métodos implementados")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#generar-contrasena-dado-un-tipocontrasena"},{default:e(()=>[t("Generar contraseña dado un TipoContraseña")]),_:1})]),n("li",null,[s(a,{to:"#generar-contrasena-dado-una-longitud-y-un-tipocontrasena"},{default:e(()=>[t("Generar contraseña dado una longitud y un TipoContraseña")]),_:1})]),n("li",null,[s(a,{to:"#generar-contrasena-dado-una-longitud-y-una-piscina-de-caracteres"},{default:e(()=>[t("Generar contraseña dado una longitud y una piscina de caracteres")]),_:1})])])]),n("li",null,[s(a,{to:"#enums"},{default:e(()=>[t("Enums")]),_:1}),n("ul",null,[n("li",null,[s(a,{to:"#tipocontrasena"},{default:e(()=>[t("TipoContraseña")]),_:1})])])]),n("li",null,[s(a,{to:"#codigo-fuente"},{default:e(()=>[t("Código Fuente")]),_:1})]),n("li",null,[s(a,{to:"#clases-utilizadas-importaciones"},{default:e(()=>[t("Clases utilizadas (Importaciones)")]),_:1})])])]),m])}const y=c(u,[["render",v],["__file","GeneradorContrasenas.html.vue"]]);export{y as default};
