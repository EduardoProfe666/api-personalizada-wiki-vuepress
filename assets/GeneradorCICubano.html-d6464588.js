import{_ as p}from"./banner-85030e21.js";import{_ as c,r as i,o as l,c as u,a as n,d as a,w as t,b as e,e as o}from"./app-7e379709.js";const d={},r=o('<p><img src="'+p+`" alt="a"></p><h1 id="generadorcicubano" tabindex="-1"><a class="header-anchor" href="#generadorcicubano" aria-hidden="true">#</a> GeneradorCICubano</h1><p>Clase de utilidades que permite la generación de carnet de identidad cubanos válidos y únicos, y otras funcionalidades.</p><p>El acceso a estos métodos es de manera estática. Por ejemplo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> ci <span class="token operator">=</span> <span class="token class-name">GeneradorCICubano</span><span class="token punctuation">.</span><span class="token function">generarCICubano</span><span class="token punctuation">(</span><span class="token class-name">Sexo<span class="token punctuation">.</span>Masculino</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Nota:</p><p>En la prueba visual de la api, existe una prueba de estas funcionalidades en la sección de <code>Generadores</code>.</p></div><h2 id="indice-de-contenido" tabindex="-1"><a class="header-anchor" href="#indice-de-contenido" aria-hidden="true">#</a> Índice de contenido</h2>`,7),k={class:"table-of-contents"},m=o(`<h2 id="formato-de-ci-cubano" tabindex="-1"><a class="header-anchor" href="#formato-de-ci-cubano" aria-hidden="true">#</a> Formato de CI cubano</h2><p>El algoritmo de generación de carnet de identidad cubano utiliza el siguiente formato para generar los 11 dígitos del ci:</p><ul><li><strong>Dígitos 1-2:</strong> Dígitos que representan los 2 últimos dígitos del año de nacimiento. Por ejemplo: <code>2002</code>-&gt;<code>02</code>.</li><li><strong>Dígitos 3-4:</strong> Dígitos que representan el mes de nacimiento, siendo <code>enero</code>-&gt;<code>01</code> y <code>diciembre</code>-&gt;<code>12</code>.</li><li><strong>Dígitos 5-6:</strong> Dígitos que representan el día de nacimiento. Por ejemplo: <code>01</code> y <code>31</code>.</li><li><strong>Dígito 7:</strong> Dígito que representa el siglo de nacimiento, siendo <code>0-5</code>-&gt;<code>Siglo XX</code>, <code>6-8</code>-&gt;<code>Siglo XXI</code> y <code>9</code>-&gt;<code>Siglo XIX</code></li><li><strong>Dígitos 8-9:</strong> Dígitos aleatorios.</li><li><strong>Dígitos 10:</strong> Dígito que representa el sexo, de forma tal que si es par es masculino e impar si es femenino.</li><li><strong>Dígitos 11:</strong> Dígito aleatorio. (En verdad este es un dígito de control, pero no se pudo recolectar el algoritmo empleado para su generación)</li></ul><h2 id="metodos-implementados" tabindex="-1"><a class="header-anchor" href="#metodos-implementados" aria-hidden="true">#</a> Métodos implementados</h2><ul><li><a href="#generar-ci-dado-sexo-y-edad">Generar CI dado Sexo y edad</a></li><li><a href="#generar-ci-dado-sexo-y-un-rango-de-edades">Generar CI dado Sexo y un rango de edades</a></li><li><a href="#generar-listado-de-ci-dado-cantidad-sexo-y-un-rango-de-edades">Generar Listado de CI dado cantidad, Sexo y un rango de edades</a></li><li><a href="#generar-informe-txt-de-listado-de-ci-dado-cantidad-sexo-y-rango-de-edades">Generar informe txt de listado de CI dado cantidad, Sexo y rango de edades</a></li></ul><h3 id="generar-ci-dado-sexo-y-edad" tabindex="-1"><a class="header-anchor" href="#generar-ci-dado-sexo-y-edad" aria-hidden="true">#</a> Generar CI dado Sexo y edad</h3><ul><li><strong>Arquetipo:</strong> <code>generarCICubano(Sexo, int)</code></li><li><strong>Parámetros:</strong> <code>Sexo</code> y edad</li><li><strong>Descripción:</strong> Permite generar de forma aleatoria un ci cubano válido con <code>Sexo</code> y edad dados.</li><li><strong>Particularidades:</strong> Si sexo es <code>null</code> o edad &lt; 0, se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> ci <span class="token operator">=</span> <span class="token class-name">GeneradorCICubano</span><span class="token punctuation">.</span><span class="token function">generarCICubano</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">FEMENINO</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-ci-dado-sexo-y-un-rango-de-edades" tabindex="-1"><a class="header-anchor" href="#generar-ci-dado-sexo-y-un-rango-de-edades" aria-hidden="true">#</a> Generar CI dado Sexo y un rango de edades</h3><ul><li><strong>Arquetipo:</strong> <code>generarCICubano(Sexo, int, int)</code></li><li><strong>Parámetros:</strong> <code>Sexo</code> y rango de edades</li><li><strong>Descripción:</strong> Permite generar de forma aleatoria un ci cubano válido con <code>Sexo</code> dado y una edad aleatoria en el rango entre edadMin y edadMax.</li><li><strong>Particularidades:</strong> Si sexo es <code>null</code>, o edadMax o edadMin son menores que 0, o edadMin &gt; edadMax, se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> ci <span class="token operator">=</span> <span class="token class-name">GeneradorCICubano</span><span class="token punctuation">.</span><span class="token function">generarCICubano</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">MASCULINO</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-listado-de-ci-dado-cantidad-sexo-y-un-rango-de-edades" tabindex="-1"><a class="header-anchor" href="#generar-listado-de-ci-dado-cantidad-sexo-y-un-rango-de-edades" aria-hidden="true">#</a> Generar Listado de CI dado cantidad, Sexo y un rango de edades</h3><ul><li><strong>Arquetipo:</strong> <code>generarListadoCICubano(int, Sexo, int, int)</code></li><li><strong>Parámetros:</strong> Cantidad de ci, <code>Sexo</code> y rango de edades</li><li><strong>Descripción:</strong> Permite generar un listado con una cantidad determinada de ci cubanos únicos y de forma aleatoria. Se generarán con el <code>Sexo</code> dado y una edad aleatoria en el rango entre edadMin y edadMax.</li><li><strong>Particularidades:</strong> Si sexo es <code>null</code>, o edadMax o edadMin son menores que 0, o edadMin &gt; edadMax, se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listadoCI <span class="token operator">=</span> <span class="token class-name">GeneradorCICubano</span><span class="token punctuation">.</span><span class="token function">generarListadoCICubano</span><span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">,</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">ALEATORIO</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-informe-txt-de-listado-de-ci-dado-cantidad-sexo-y-rango-de-edades" tabindex="-1"><a class="header-anchor" href="#generar-informe-txt-de-listado-de-ci-dado-cantidad-sexo-y-rango-de-edades" aria-hidden="true">#</a> Generar informe txt de listado de CI dado cantidad, Sexo y rango de edades</h3><ul><li><strong>Arquetipo:</strong> <code>generarInformeListadoCiCubano(int, Sexo, int, int)</code></li><li><strong>Parámetros:</strong> Cantidad de ci, <code>Sexo</code> y rango de edades</li><li><strong>Descripción:</strong> Permite generar un txt en la carpeta raíz que contiene un listado con una cantidad determinada de ci cubanos únicos y de forma aleatoria. Se generarán con el <code>Sexo</code> dado y una edad aleatoria en el rango entre edadMin y edadMax. Este archivo se crea con el nombre <strong>Listado_Ci_Generados.txt</strong>. Al crearse, se imprime por consola la ruta del archivo generado.</li><li><strong>Particularidades:</strong> Si sexo es <code>null</code>, o edadMax o edadMin son menores que 0, o edadMin &gt; edadMax, se lanza un <code>IllegalArgumentException</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">GeneradorCICubano</span><span class="token punctuation">.</span><span class="token function">generarInformeListadoCiCubano</span><span class="token punctuation">(</span><span class="token number">200000</span><span class="token punctuation">,</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">ALEATORIO</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="enums" tabindex="-1"><a class="header-anchor" href="#enums" aria-hidden="true">#</a> Enums</h2><p>Los enums son:</p><ul><li><a href="#sexo">Sexo</a></li></ul><h3 id="sexo" tabindex="-1"><a class="header-anchor" href="#sexo" aria-hidden="true">#</a> Sexo</h3><p>Enum que permite modelar el sexo de los ci a generar.</p><p>Los sexos actualmente soportados son:</p><ul><li><code>FEMENINO</code>: Permite generar ci de sexo femenino</li><li><code>MASCULINO</code>: Permite generar ci de sexo masculino</li><li><code>ALEATORIO</code>: Permite generar ci tanto de sexo femenino como masculino</li></ul><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">GeneradorCICubano</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">GeneradorCICubano</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Random</span> rnd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generarCICubano</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span> <span class="token keyword">int</span> edad<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>sexo<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> edad<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Parámetros Erróneos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token function">generarCICubano</span><span class="token punctuation">(</span>sexo<span class="token punctuation">,</span> edad<span class="token punctuation">,</span> edad<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generarCICubano</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span> <span class="token keyword">int</span> edadMin<span class="token punctuation">,</span> <span class="token keyword">int</span> edadMax<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>sexo<span class="token operator">==</span><span class="token keyword">null</span> <span class="token operator">||</span> edadMax<span class="token operator">&lt;</span><span class="token number">0</span> <span class="token operator">||</span> edadMin<span class="token operator">&lt;</span><span class="token number">0</span> <span class="token operator">||</span> edadMin<span class="token operator">&gt;</span>edadMax<span class="token punctuation">)</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Parámetros Erróneos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Date</span> fechaMin <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">sumarAnyosFecha</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span>edadMin<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Date</span> fechaMax <span class="token operator">=</span> <span class="token class-name">Auxiliares</span><span class="token punctuation">.</span><span class="token function">sumarAnyosFecha</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span>edadMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Calendar</span> fechaNacimiento <span class="token operator">=</span> <span class="token function">generarFechaCalendar</span><span class="token punctuation">(</span>fechaMin<span class="token punctuation">,</span> fechaMax<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">int</span> anyo <span class="token operator">=</span> fechaNacimiento<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> mes <span class="token operator">=</span> fechaNacimiento<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> dia <span class="token operator">=</span> fechaNacimiento<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> sigloDisminuido <span class="token operator">=</span> anyo<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> anyoCi <span class="token operator">=</span> anyo<span class="token operator">-</span><span class="token punctuation">(</span>sigloDisminuido<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token operator">+</span><span class="token function">convertirEnteroDobleString</span><span class="token punctuation">(</span>anyoCi<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">convertirEnteroDobleString</span><span class="token punctuation">(</span>mes<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">convertirEnteroDobleString</span><span class="token punctuation">(</span>dia<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">generarDigitoSiglo</span><span class="token punctuation">(</span>sigloDisminuido<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">convertirEnteroDobleString</span><span class="token punctuation">(</span><span class="token function">generarEntero</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">generarDigitoSexo</span><span class="token punctuation">(</span>sexo<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">generarEntero</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generarListadoCICubano</span><span class="token punctuation">(</span><span class="token keyword">int</span> cantidad<span class="token punctuation">,</span> <span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span> <span class="token keyword">int</span> edadMin<span class="token punctuation">,</span> <span class="token keyword">int</span> edadMax<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listadoCi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>cantidad<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cantidad<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token class-name">String</span> ci<span class="token punctuation">;</span>
			<span class="token keyword">do</span><span class="token punctuation">{</span>
				ci <span class="token operator">=</span> <span class="token function">generarCICubano</span><span class="token punctuation">(</span>sexo<span class="token punctuation">,</span> edadMin<span class="token punctuation">,</span> edadMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">comprobarCiExistente</span><span class="token punctuation">(</span>ci<span class="token punctuation">,</span> listadoCi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			listadoCi<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>listadoCi<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> listadoCi<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">generarInformeListadoCiCubano</span><span class="token punctuation">(</span><span class="token keyword">int</span> cantidad<span class="token punctuation">,</span> <span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span> <span class="token keyword">int</span> edadMin<span class="token punctuation">,</span> <span class="token keyword">int</span> edadMax<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">File</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;Listado_Ci_Generados.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		f<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			f<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">PrintWriter</span> pw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> <span class="token function">generarListadoCICubano</span><span class="token punctuation">(</span>cantidad<span class="token punctuation">,</span> sexo<span class="token punctuation">,</span> edadMin<span class="token punctuation">,</span> edadMax<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				pw<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Ruta del archivo generado: &quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/Listado_Ci_Generados.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">convertirEnteroDobleString</span><span class="token punctuation">(</span><span class="token keyword">int</span> entero<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>entero<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>entero<span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> entero<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			s <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token operator">+</span>s<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> s<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">generarDigitoSiglo</span><span class="token punctuation">(</span><span class="token keyword">int</span> sigloDisminuido<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> digito<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>sigloDisminuido<span class="token operator">==</span><span class="token number">19</span><span class="token punctuation">)</span>
			digito <span class="token operator">=</span> rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sigloDisminuido<span class="token operator">==</span><span class="token number">20</span><span class="token punctuation">)</span>
			digito <span class="token operator">=</span> rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> digito<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">generarDigitoSexo</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span> sexo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> digito<span class="token operator">=</span>rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>sexo<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">FEMENINO</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>sexo<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">ALEATORIO</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> rnd<span class="token punctuation">.</span><span class="token function">nextBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>digito<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				digito<span class="token operator">++</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>digito<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			digito<span class="token operator">--</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> digito<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">generarEntero</span><span class="token punctuation">(</span><span class="token keyword">int</span> min<span class="token punctuation">,</span> <span class="token keyword">int</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>min<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Calendar</span> <span class="token function">generarFechaCalendar</span><span class="token punctuation">(</span><span class="token class-name">Date</span> fechaMinima<span class="token punctuation">,</span> <span class="token class-name">Date</span> fechaMaxima<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">long</span> max <span class="token operator">=</span> fechaMaxima<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> min <span class="token operator">=</span> fechaMinima<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">long</span> fechaLong <span class="token operator">=</span> min <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">Calendar</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GregorianCalendar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		c<span class="token punctuation">.</span><span class="token function">setTimeInMillis</span><span class="token punctuation">(</span>fechaLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> c<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">comprobarCiExistente</span><span class="token punctuation">(</span><span class="token class-name">String</span> ci<span class="token punctuation">,</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listadoCI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> esValido <span class="token operator">=</span> ci<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span><span class="token punctuation">(</span>esValido<span class="token punctuation">)</span>
			esValido <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>listadoCI<span class="token punctuation">,</span> ci<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> esValido<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">enum</span> <span class="token class-name">Sexo</span><span class="token punctuation">{</span>

		<span class="token constant">FEMENINO</span><span class="token punctuation">,</span>

		<span class="token constant">MASCULINO</span><span class="token punctuation">,</span>

		<span class="token constant">ALEATORIO</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">PrintWriter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Calendar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">GregorianCalendar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function v(g,b){const s=i("router-link");return l(),u("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#indice-de-contenido"},{default:t(()=>[e("Índice de contenido")]),_:1})]),n("li",null,[a(s,{to:"#formato-de-ci-cubano"},{default:t(()=>[e("Formato de CI cubano")]),_:1})]),n("li",null,[a(s,{to:"#metodos-implementados"},{default:t(()=>[e("Métodos implementados")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#generar-ci-dado-sexo-y-edad"},{default:t(()=>[e("Generar CI dado Sexo y edad")]),_:1})]),n("li",null,[a(s,{to:"#generar-ci-dado-sexo-y-un-rango-de-edades"},{default:t(()=>[e("Generar CI dado Sexo y un rango de edades")]),_:1})]),n("li",null,[a(s,{to:"#generar-listado-de-ci-dado-cantidad-sexo-y-un-rango-de-edades"},{default:t(()=>[e("Generar Listado de CI dado cantidad, Sexo y un rango de edades")]),_:1})]),n("li",null,[a(s,{to:"#generar-informe-txt-de-listado-de-ci-dado-cantidad-sexo-y-rango-de-edades"},{default:t(()=>[e("Generar informe txt de listado de CI dado cantidad, Sexo y rango de edades")]),_:1})])])]),n("li",null,[a(s,{to:"#enums"},{default:t(()=>[e("Enums")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#sexo"},{default:t(()=>[e("Sexo")]),_:1})])])]),n("li",null,[a(s,{to:"#codigo-fuente"},{default:t(()=>[e("Código Fuente")]),_:1})]),n("li",null,[a(s,{to:"#clases-utilizadas-importaciones"},{default:t(()=>[e("Clases utilizadas (Importaciones)")]),_:1})])])]),m])}const f=c(d,[["render",v],["__file","GeneradorCICubano.html.vue"]]);export{f as default};
