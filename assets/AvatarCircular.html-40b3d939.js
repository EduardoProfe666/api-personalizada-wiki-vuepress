import{_ as c}from"./banner-85030e21.js";import{_ as l,r as p,o as i,c as u,a as n,b as a,d as s,w as e,e as r}from"./app-7e379709.js";const d="/api-personalizada-wiki-vuepress/gifs/avatar-circular.gif",k={},m=n("p",null,[n("img",{src:c,alt:"a"})],-1),v=n("h1",{id:"avatarcircular",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#avatarcircular","aria-hidden":"true"},"#"),a(" AvatarCircular")],-1),b=n("p",null,"Clase visual que permite la representación de un avatar circular con tamaño y color de borde variable dada una imagen.",-1),g=n("p",null,[a("Esta clase hereda de "),n("code",null,"JComponent"),a(".")],-1),h={href:"https://github.com/DJ-Raven/java-swing-image-avatar-v2",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/DJ-Raven",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,[n("strong",null,"Preview de Componente en la Prueba Visual:"),n("img",{src:d,alt:"a"})],-1),y=n("h2",{id:"indice-de-contenido",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#indice-de-contenido","aria-hidden":"true"},"#"),a(" Índice de Contenido")],-1),A={class:"table-of-contents"},C=r(`<h2 id="constructores" tabindex="-1"><a class="header-anchor" href="#constructores" aria-hidden="true">#</a> Constructores</h2><ul><li><a href="#constructor-vac%C3%ADo">Constructor vacío</a></li><li><a href="#constructor-con-imagen-y-tama%C3%B1o-de-borde">Constructor con Imagen y Tamaño de borde</a></li></ul><h3 id="constructor-vacio" tabindex="-1"><a class="header-anchor" href="#constructor-vacio" aria-hidden="true">#</a> Constructor vacío</h3><ul><li><strong>Arquetipo:</strong> <code>AvatarCircular()</code></li><li><strong>Descripción:</strong> Permite construir el componente visual <code>AvatarCircular</code>.</li><li><strong>Particularidades:</strong> El componente es creado sin avatar (<code>null</code>) y con tamaño del borde = 0.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AvatarCircular</span> avatar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="constructor-con-imagen-y-tamano-de-borde" tabindex="-1"><a class="header-anchor" href="#constructor-con-imagen-y-tamano-de-borde" aria-hidden="true">#</a> Constructor con Imagen y Tamaño de borde</h3><ul><li><strong>Arquetipo:</strong> <code>AvatarCircular(Icon, int)</code></li><li><strong>Parámetros:</strong> <code>Icon</code> imagen a renderizar, <code>int</code> grosor del borde</li><li><strong>Descripción:</strong> Permite construir el componente visual <code>AvatarCircular</code> con la imagen y grosor del borde dados.</li><li><strong>Particularidades:</strong></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AvatarCircular</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token class-name">ClaseBase</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;/img/avatar.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="atributos-de-interes" tabindex="-1"><a class="header-anchor" href="#atributos-de-interes" aria-hidden="true">#</a> Atributos de interés</h2><ul><li><a href="#avatar">Avatar</a></li><li><a href="#tama%C3%B1o-del-borde">Tamaño del Borde</a></li></ul><h3 id="avatar" tabindex="-1"><a class="header-anchor" href="#avatar" aria-hidden="true">#</a> Avatar</h3><ul><li><strong>Arquetipo:</strong> <code>Icon avatar</code></li><li><strong>Descripción:</strong> <code>Icon</code> que determina la imagen del avatar a renderizar.</li><li><strong>Métodos Relacionados:</strong> <a href="#getter-de-avatar">Getter de Avatar</a> y <a href="#setter-de-avatar">Setter de Avatar</a></li></ul><h3 id="tamano-del-borde" tabindex="-1"><a class="header-anchor" href="#tamano-del-borde" aria-hidden="true">#</a> Tamaño del Borde</h3><ul><li><strong>Arquetipo:</strong> <code>int tamBorde</code></li><li><strong>Descripción:</strong> <code>int</code> que determina el grosor del borde del avatar.</li><li><strong>Métodos Relacionados:</strong> <a href="#getter-de-tama%C3%B1o-del-borde">Getter de tamaño del borde</a> y <a href="#setter-de-tama%C3%B1o-del-borde">Setter de tamaño del borde</a></li></ul><h2 id="metodos-de-interes" tabindex="-1"><a class="header-anchor" href="#metodos-de-interes" aria-hidden="true">#</a> Métodos de interés</h2><ul><li><a href="#getter-de-avatar">Getter de Avatar</a></li><li><a href="#setter-de-avatar">Setter de Avatar</a></li><li><a href="#getter-de-tama%C3%B1o-del-borde">Getter de Tamaño del Borde</a></li><li><a href="#setter-de-tama%C3%B1o-del-borde">Setter de Tamaño del Borde</a></li><li><a href="#cambiar-color-del-borde">Cambiar color del Borde</a></li></ul><h3 id="getter-de-avatar" tabindex="-1"><a class="header-anchor" href="#getter-de-avatar" aria-hidden="true">#</a> Getter de Avatar</h3><ul><li><strong>Arquetipo:</strong> <code>getAvatar()</code></li><li><strong>Descripción:</strong> Permite obtener el <code>Icon</code> de la imagen usada para renderizar el avatar circular.</li><li><strong>Atributos Relacionados:</strong> <a href="#avatar">Avatar</a></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Icon</span> ico <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ico = null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="setter-de-avatar" tabindex="-1"><a class="header-anchor" href="#setter-de-avatar" aria-hidden="true">#</a> Setter de Avatar</h3><ul><li><strong>Arquetipo:</strong> <code>setAvatar(Icon)</code></li><li><strong>Parámetros:</strong> <code>Icon</code> imagen a renderizar.</li><li><strong>Descripción:</strong> Permite la imagen del avatar renderizada.</li><li><strong>Particularidades:</strong> Se recomienda que las imágenes sean con formato <code>.jpg</code> (versión ligera) o <code>.png</code> (transparencia). <strong>No</strong> se guardan los avatares que sean <code>null</code>, sino que se mantiene el valor anteriormente guardado.</li><li><strong>Atributos Relacionados:</strong> <a href="#avatar">Avatar</a></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AvatarCircular</span> avatar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
avatar<span class="token punctuation">.</span><span class="token function">setAvatar</span><span class="token punctuation">(</span><span class="token class-name">ClaseBase</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;/img/avatar.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="getter-de-tamano-del-borde" tabindex="-1"><a class="header-anchor" href="#getter-de-tamano-del-borde" aria-hidden="true">#</a> Getter de Tamaño del Borde</h3><ul><li><strong>Arquetipo:</strong> <code>getTamBorde()</code></li><li><strong>Descripción:</strong> Permite obtener el tamaño o grosor del borde.</li><li><strong>Atributos Relacionados:</strong> <a href="#tama%C3%B1o-del-borde">Tamaño del Borde</a></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTamBorde</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// n = 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="setter-de-tamano-del-borde" tabindex="-1"><a class="header-anchor" href="#setter-de-tamano-del-borde" aria-hidden="true">#</a> Setter de Tamaño del Borde</h3><ul><li><strong>Arquetipo:</strong> <code>setTamBorde(int)</code></li><li><strong>Parámetros:</strong> <code>int</code> grosor del borde.</li><li><strong>Descripción:</strong> Permite cambiar el tamaño o grosor del borde del avatar.</li><li><strong>Particularidades:</strong> <strong>No</strong> se guardan los grosores menores que 0, sino que se mantiene el valor anteriormente guardado.</li><li><strong>Atributos Relacionados:</strong> <a href="#tama%C3%B1o-del-borde">Tamaño del Borde</a></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AvatarCircular</span> avatar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
avatar<span class="token punctuation">.</span><span class="token function">setTamBorde</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="cambiar-color-del-borde" tabindex="-1"><a class="header-anchor" href="#cambiar-color-del-borde" aria-hidden="true">#</a> Cambiar color del Borde</h3><ul><li><strong>Arquetipo:</strong> <code>setForeground(Color)</code> (<strong>Valor Empleado</strong>)</li><li><strong>Parámetros:</strong> <code>Color</code> del borde</li><li><strong>Descripción:</strong> Permite cambiar el color del borde de este componente visual.</li><li><strong>Particularidades:</strong> <strong>No</strong> se sobreescribe el método original, sino que es usado para con su valor cambiar el color del borde.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AvatarCircular</span> avatar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
avatar<span class="token punctuation">.</span><span class="token function">setForeground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="ejemplo-de-uso" tabindex="-1"><a class="header-anchor" href="#ejemplo-de-uso" aria-hidden="true">#</a> Ejemplo de Uso</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Prueba</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">JPanel</span> contentPane<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">AvatarCircular</span> avatarCircular<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">Prueba</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span><span class="token constant">EXIT_ON_CLOSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane<span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EmptyBorder</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setContentPane</span><span class="token punctuation">(</span>contentPane<span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		avatarCircular <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		avatarCircular<span class="token punctuation">.</span><span class="token function">setForeground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">ORANGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		avatarCircular<span class="token punctuation">.</span><span class="token function">setTamBorde</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		avatarCircular<span class="token punctuation">.</span><span class="token function">setAvatar</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token class-name">Prueba</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;/img/avatar.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		avatarCircular<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>avatarCircular<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AvatarCircular</span> <span class="token keyword">extends</span> <span class="token class-name">JComponent</span><span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Icon</span> avatar<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">int</span> tamBorde<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token class-name">Icon</span> avatar<span class="token punctuation">,</span> <span class="token keyword">int</span> tamBorde<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setAvatar</span><span class="token punctuation">(</span>avatar<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setTamBorde</span><span class="token punctuation">(</span>tamBorde<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">public</span> <span class="token class-name">AvatarCircular</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>avatar<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>tamBorde<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">Icon</span> <span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> avatar<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAvatar</span><span class="token punctuation">(</span><span class="token class-name">Icon</span> avatar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>avatar<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>avatar <span class="token operator">=</span> avatar<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getTamBorde</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> tamBorde<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTamBorde</span><span class="token punctuation">(</span><span class="token keyword">int</span> tamBorde<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>tamBorde<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>tamBorde <span class="token operator">=</span> tamBorde<span class="token punctuation">;</span>
		<span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">paintComponent</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> grphcs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>avatar <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">int</span> ancho <span class="token operator">=</span> <span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> alto <span class="token operator">=</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> diametro <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>ancho<span class="token punctuation">,</span> alto<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> x <span class="token operator">=</span> ancho <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> diametro <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> y <span class="token operator">=</span> alto <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> diametro <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> borde <span class="token operator">=</span> tamBorde <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
			diametro <span class="token operator">-=</span> borde<span class="token punctuation">;</span>
			<span class="token class-name">Rectangle</span> tam <span class="token operator">=</span> <span class="token function">ajustarImagen</span><span class="token punctuation">(</span>avatar<span class="token punctuation">,</span> diametro<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">BufferedImage</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>tam<span class="token punctuation">.</span>width<span class="token punctuation">,</span> tam<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">.</span><span class="token constant">TYPE_INT_ARGB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Graphics2D</span> g2_img <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_ANTIALIASING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_ANTIALIAS_ON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">fillOval</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> diametro<span class="token punctuation">,</span> diametro<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Composite</span> composite <span class="token operator">=</span> g2_img<span class="token punctuation">.</span><span class="token function">getComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">setComposite</span><span class="token punctuation">(</span><span class="token class-name">AlphaComposite<span class="token punctuation">.</span>SrcIn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_INTERPOLATION</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_INTERPOLATION_BILINEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token function">toImage</span><span class="token punctuation">(</span>avatar<span class="token punctuation">)</span><span class="token punctuation">,</span> tam<span class="token punctuation">.</span>x<span class="token punctuation">,</span> tam<span class="token punctuation">.</span>y<span class="token punctuation">,</span> tam<span class="token punctuation">.</span>width<span class="token punctuation">,</span> tam<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">setComposite</span><span class="token punctuation">(</span>composite<span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2_img<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Graphics2D</span> g2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Graphics2D</span><span class="token punctuation">)</span> grphcs<span class="token punctuation">;</span>
			g2<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_ANTIALIASING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_ANTIALIAS_ON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			g2<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_INTERPOLATION</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_INTERPOLATION_BICUBIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>tamBorde <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				diametro <span class="token operator">+=</span> borde<span class="token punctuation">;</span>
				g2<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token function">getForeground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				g2<span class="token punctuation">.</span><span class="token function">fillOval</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> diametro<span class="token punctuation">,</span> diametro<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isOpaque</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				g2<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token function">getBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				diametro <span class="token operator">-=</span> borde<span class="token punctuation">;</span>
				g2<span class="token punctuation">.</span><span class="token function">fillOval</span><span class="token punctuation">(</span>x <span class="token operator">+</span> tamBorde<span class="token punctuation">,</span> y <span class="token operator">+</span> tamBorde<span class="token punctuation">,</span> diametro<span class="token punctuation">,</span> diametro<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			g2<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> x <span class="token operator">+</span> tamBorde<span class="token punctuation">,</span> y <span class="token operator">+</span> tamBorde<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">paintComponent</span><span class="token punctuation">(</span>grphcs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token class-name">Rectangle</span> <span class="token function">ajustarImagen</span><span class="token punctuation">(</span><span class="token class-name">Icon</span> avatar<span class="token punctuation">,</span> <span class="token keyword">int</span> tam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">int</span> w <span class="token operator">=</span> tam<span class="token punctuation">;</span>
		<span class="token keyword">int</span> h <span class="token operator">=</span> tam<span class="token punctuation">;</span>
		<span class="token keyword">int</span> iw <span class="token operator">=</span> avatar<span class="token punctuation">.</span><span class="token function">getIconWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> ih <span class="token operator">=</span> avatar<span class="token punctuation">.</span><span class="token function">getIconHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">double</span> escalaX <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> w <span class="token operator">/</span> iw<span class="token punctuation">;</span>
		<span class="token keyword">double</span> escalaY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> h <span class="token operator">/</span> ih<span class="token punctuation">;</span>
		<span class="token keyword">double</span> escala <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>escalaX<span class="token punctuation">,</span> escalaY<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> ancho <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>escala <span class="token operator">*</span> iw<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> alto <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>escala <span class="token operator">*</span> ih<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ancho <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ancho <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>alto <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			alto <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">int</span> cw <span class="token operator">=</span> tam<span class="token punctuation">;</span>
		<span class="token keyword">int</span> ch <span class="token operator">=</span>tam<span class="token punctuation">;</span>
		<span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>cw <span class="token operator">-</span> ancho<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>ch <span class="token operator">-</span> alto<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Dimension</span><span class="token punctuation">(</span>ancho<span class="token punctuation">,</span> alto<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token class-name">Image</span> <span class="token function">toImage</span><span class="token punctuation">(</span><span class="token class-name">Icon</span> icono<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ImageIcon</span><span class="token punctuation">)</span> icono<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">AlphaComposite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Composite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Dimension</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Graphics</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Graphics2D</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Image</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Point</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Rectangle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">RenderingHints</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferedImage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">Icon</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">ImageIcon</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JComponent</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function _(I,B){const o=p("ExternalLinkIcon"),t=p("router-link");return i(),u("div",null,[m,v,b,g,n("p",null,[a("Este es un componente personalizado cuya idea original se encuentra en "),n("a",h,[a("este repositorio"),s(o)]),a(" de "),n("a",w,[a("DJ Raven"),s(o)]),a(".")]),f,y,n("nav",A,[n("ul",null,[n("li",null,[s(t,{to:"#indice-de-contenido"},{default:e(()=>[a("Índice de Contenido")]),_:1})]),n("li",null,[s(t,{to:"#constructores"},{default:e(()=>[a("Constructores")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#constructor-vacio"},{default:e(()=>[a("Constructor vacío")]),_:1})]),n("li",null,[s(t,{to:"#constructor-con-imagen-y-tamano-de-borde"},{default:e(()=>[a("Constructor con Imagen y Tamaño de borde")]),_:1})])])]),n("li",null,[s(t,{to:"#atributos-de-interes"},{default:e(()=>[a("Atributos de interés")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#avatar"},{default:e(()=>[a("Avatar")]),_:1})]),n("li",null,[s(t,{to:"#tamano-del-borde"},{default:e(()=>[a("Tamaño del Borde")]),_:1})])])]),n("li",null,[s(t,{to:"#metodos-de-interes"},{default:e(()=>[a("Métodos de interés")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#getter-de-avatar"},{default:e(()=>[a("Getter de Avatar")]),_:1})]),n("li",null,[s(t,{to:"#setter-de-avatar"},{default:e(()=>[a("Setter de Avatar")]),_:1})]),n("li",null,[s(t,{to:"#getter-de-tamano-del-borde"},{default:e(()=>[a("Getter de Tamaño del Borde")]),_:1})]),n("li",null,[s(t,{to:"#setter-de-tamano-del-borde"},{default:e(()=>[a("Setter de Tamaño del Borde")]),_:1})]),n("li",null,[s(t,{to:"#cambiar-color-del-borde"},{default:e(()=>[a("Cambiar color del Borde")]),_:1})])])]),n("li",null,[s(t,{to:"#ejemplo-de-uso"},{default:e(()=>[a("Ejemplo de Uso")]),_:1})]),n("li",null,[s(t,{to:"#codigo-fuente"},{default:e(()=>[a("Código Fuente")]),_:1})]),n("li",null,[s(t,{to:"#clases-utilizadas-importaciones"},{default:e(()=>[a("Clases utilizadas (Importaciones)")]),_:1})])])]),C])}const q=l(k,[["render",_],["__file","AvatarCircular.html.vue"]]);export{q as default};
