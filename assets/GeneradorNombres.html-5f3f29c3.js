import{_ as p}from"./banner-85030e21.js";import{_ as c,r as l,o as i,c as u,a as n,d as a,w as e,b as t,e as o}from"./app-7e379709.js";const d={},r=o('<p><img src="'+p+`" alt="a"></p><h1 id="generadornombres" tabindex="-1"><a class="header-anchor" href="#generadornombres" aria-hidden="true">#</a> GeneradorNombres</h1><p>Clase de utilidades que permite la generación de nombres femeninos y masculinos, sus respectivos apellidos, y otras funcionalidades.</p><p>El acceso a estos métodos es de manera estática. Por ejemplo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> nombre <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarNombre</span><span class="token punctuation">(</span><span class="token class-name">Sexo<span class="token punctuation">.</span>Masculino</span><span class="token punctuation">,</span> <span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">SIMPLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Nota:</p><p>En la prueba visual de la api, existe una prueba de estas funcionalidades en la sección de <code>Generadores</code>.</p></div><h2 id="indice-de-contenido" tabindex="-1"><a class="header-anchor" href="#indice-de-contenido" aria-hidden="true">#</a> Índice de contenido</h2>`,7),k={class:"table-of-contents"},m=o(`<h2 id="piscinas-de-datos" tabindex="-1"><a class="header-anchor" href="#piscinas-de-datos" aria-hidden="true">#</a> Piscinas de Datos</h2><p>Los listados de nombres y apellidos que sirven de piscina de datos son los siguientes:</p><ul><li><a href="/api-personalizada-wiki-vuepress/nombres/nombres_masculinos.txt">Listado de nombres masculinos</a>.</li><li><a href="/api-personalizada-wiki-vuepress/nombres/nombres_femeninos.txt">Listado de nombres femeninos</a>.</li><li><a href="/api-personalizada-wiki-vuepress/nombres/apellidos.txt">Listado de apellidos</a>.</li></ul><h2 id="metodos-implementados" tabindex="-1"><a class="header-anchor" href="#metodos-implementados" aria-hidden="true">#</a> Métodos implementados</h2><ul><li><a href="#generar-nombre-dado-sexo-y-complejidad">Generar nombre dado Sexo y Complejidad</a></li><li><a href="#generar-todos-los-nombres-dado-sexo">Generar todos los nombres dado Sexo</a></li><li><a href="#generar-una-parte-de-todos-los-nombres-dados-cantidad-y-sexo">Generar una parte de todos los nombres dados cantidad y Sexo</a></li><li><a href="#generar-todos-los-apellidos">Generar todos los apellidos</a></li><li><a href="#generar-una-parte-de-todos-los-apellidos-dado-una-cantidad">Generar una parte de todos los apellidos dado una cantidad</a></li><li><a href="#generar-un-apellido-dado-complejidad">Generar un apellido dado Complejidad</a></li><li><a href="#generar-un-nombre-completo-dado-sexo-complejidad-del-nombre-y-complejidad-del-apellido">Generar un nombre completo dado Sexo, Complejidad del nombre y Complejidad del apellido</a></li><li><a href="#generar-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido">Generar listado de nombres completos dados cantidad, Sexo, Complejidad del nombre y Complejidad del apellido</a></li><li><a href="#generar-informe-txt-del-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido">Generar Informe txt del listado de nombres completos dados cantidad, Sexo, Complejidad del nombre y Complejidad del apellido</a></li></ul><h3 id="generar-nombre-dado-sexo-y-complejidad" tabindex="-1"><a class="header-anchor" href="#generar-nombre-dado-sexo-y-complejidad" aria-hidden="true">#</a> Generar nombre dado Sexo y Complejidad</h3><ul><li><strong>Arquetipo:</strong> <code>generarNombre(Sexo, Complejidad)</code></li><li><strong>Parámetros:</strong> <code>Sexo</code> y <code>Complejidad</code> del nombre</li><li><strong>Descripción:</strong> Permite generar de forma aleatoria un nombre dado su <code>Sexo</code> y <code>Complejidad</code></li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> nombre <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarNombre</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">FEMENINO</span><span class="token punctuation">,</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">SIMPLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-todos-los-nombres-dado-sexo" tabindex="-1"><a class="header-anchor" href="#generar-todos-los-nombres-dado-sexo" aria-hidden="true">#</a> Generar todos los nombres dado Sexo</h3><ul><li><strong>Arquetipo:</strong> <code>generarNombres(Sexo)</code></li><li><strong>Parámetros:</strong> <code>Sexo</code></li><li><strong>Descripción:</strong> Permite generar todos los nombres posibles del<code>Sexo</code> pasado.</li><li><strong>Particularidades:</strong> La cantidad de nombres generados es en dependencia del <code>Sexo</code> seleccionado.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listado <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarNombres</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">ALEATORIO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-una-parte-de-todos-los-nombres-dados-cantidad-y-sexo" tabindex="-1"><a class="header-anchor" href="#generar-una-parte-de-todos-los-nombres-dados-cantidad-y-sexo" aria-hidden="true">#</a> Generar una parte de todos los nombres dados cantidad y Sexo</h3><ul><li><strong>Arquetipo:</strong> <code>generarNombres(int, Sexo)</code></li><li><strong>Parámetros:</strong> Cantidad de nombres y <code>Sexo</code></li><li><strong>Descripción:</strong> Permite generar una cantidad de nombres del <code>Sexo</code> pasado.</li><li><strong>Particularidades:</strong> La cantidad máxima de nombres generados es en dependencia del <code>Sexo</code> seleccionado.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listado <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarNombres</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">ALEATORIO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-todos-los-apellidos" tabindex="-1"><a class="header-anchor" href="#generar-todos-los-apellidos" aria-hidden="true">#</a> Generar todos los apellidos</h3><ul><li><strong>Arquetipo:</strong> <code>generarApellidos()</code></li><li><strong>Descripción:</strong> Permite generar todos los apellidos posibles</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listado <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarApellidos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-una-parte-de-todos-los-apellidos-dado-una-cantidad" tabindex="-1"><a class="header-anchor" href="#generar-una-parte-de-todos-los-apellidos-dado-una-cantidad" aria-hidden="true">#</a> Generar una parte de todos los apellidos dado una cantidad</h3><ul><li><strong>Arquetipo:</strong> <code>generarApellidos(int)</code></li><li><strong>Parámetros:</strong> Cantidad de apellidos</li><li><strong>Descripción:</strong> Permite generar una cantidad de apellidos</li><li><strong>Particularidades:</strong> Tiene como máximo la cantidad de apellidos disponibles.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listado <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarApellidos</span><span class="token punctuation">(</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-un-apellido-dado-complejidad" tabindex="-1"><a class="header-anchor" href="#generar-un-apellido-dado-complejidad" aria-hidden="true">#</a> Generar un apellido dado Complejidad</h3><ul><li><strong>Arquetipo:</strong> <code>generarApellido(Complejidad)</code></li><li><strong>Parámetros:</strong> <code>Complejidad</code></li><li><strong>Descripción:</strong> Permite generar un apellido con determinada <code>Complejidad</code>.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> apellido <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarApellido</span><span class="token punctuation">(</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">COMPUESTA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-un-nombre-completo-dado-sexo-complejidad-del-nombre-y-complejidad-del-apellido" tabindex="-1"><a class="header-anchor" href="#generar-un-nombre-completo-dado-sexo-complejidad-del-nombre-y-complejidad-del-apellido" aria-hidden="true">#</a> Generar un nombre completo dado Sexo, Complejidad del nombre y Complejidad del apellido</h3><ul><li><strong>Arquetipo:</strong> <code>generarNombreYApellidos(Sexo, Complejidad, Complejidad)</code></li><li><strong>Parámetros:</strong> <code>Sexo</code>, <code>Complejidad</code> del nombre y <code>Complejidad</code> del apellido.</li><li><strong>Descripción:</strong> Permite generar un nombre completo con nombre/s y apellido/s con determinado <code>Sexo</code>, <code>Complejidad</code> del nombre y <code>Complejidad</code> del apellido.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> nombreCompleto <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarNombreYApellidos</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">MASCULINO</span><span class="token punctuation">,</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">COMPUESTA</span><span class="token punctuation">,</span> <span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">COMPUESTA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido" tabindex="-1"><a class="header-anchor" href="#generar-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido" aria-hidden="true">#</a> Generar listado de nombres completos dados cantidad, Sexo, Complejidad del nombre y Complejidad del apellido</h3><ul><li><strong>Arquetipo:</strong> <code>generarListadoNombreYApellidos(int, Sexo, Complejidad, Complejidad)</code></li><li><strong>Parámetros:</strong> Cantidad de nombres a generar, <code>Sexo</code>, <code>Complejidad</code> de los nombres y <code>Complejidad</code> de los apellidos.</li><li><strong>Descripción:</strong> Permite generar una cantidad determinada de nombres con apellidos con determinado <code>Sexo</code>, <code>Complejidad</code> del nombre y <code>Complejidad</code> del apellido</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> listado <span class="token operator">=</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarListadoNombreYApellidos</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">ALEATORIO</span><span class="token punctuation">,</span><span class="token class-name">Complejidad<span class="token punctuation">.</span>Compuesta</span><span class="token punctuation">,</span> <span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">ALEATORIA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h3 id="generar-informe-txt-del-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido" tabindex="-1"><a class="header-anchor" href="#generar-informe-txt-del-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido" aria-hidden="true">#</a> Generar Informe txt del listado de nombres completos dados cantidad, Sexo, Complejidad del nombre y Complejidad del apellido</h3><ul><li><strong>Arquetipo:</strong> <code>generarInformeListadoNombreYApellidos(int, Sexo, Complejidad, Complejidad)</code></li><li><strong>Parámetros:</strong> Cantidad de nombres a generar, <code>Sexo</code>, <code>Complejidad</code> de los nombres y <code>Complejidad</code> de los apellidos.</li><li><strong>Descripción:</strong> Permite generar un archivo txt en la carpeta raíz que contiene un listado de nombres y apellidos con determinado <code>Sexo</code>, <code>Complejidad</code> de los nombres y <code>Complejidad</code> de los apellidos.</li><li><strong>Particularidades:</strong> Este archivo se crea con el nombre <code>Listado_Nombre_y_Apellidos_Generados.txt</code>. Al crearse, se imprime por consola la ruta del archivo generado.</li><li><blockquote><p><strong>Ejemplo de uso:</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">GeneradorNombres</span><span class="token punctuation">.</span><span class="token function">generarInformeListadoNombreYApellidos</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token class-name">Sexo</span><span class="token punctuation">.</span><span class="token constant">MASCULINO</span><span class="token punctuation">,</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">SIMPLE</span><span class="token punctuation">,</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">SIMPLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote></li></ul><h2 id="enums" tabindex="-1"><a class="header-anchor" href="#enums" aria-hidden="true">#</a> Enums</h2><p>Los enums son:</p><ul><li><a href="#sexo">Sexo</a></li><li><a href="#complejidad">Complejidad</a></li></ul><h3 id="sexo" tabindex="-1"><a class="header-anchor" href="#sexo" aria-hidden="true">#</a> Sexo</h3><p>Enum que permite modelar el sexo de los nombres a generar.</p><p>Los sexos actualmente soportados son:</p><ul><li><code>FEMENINO</code>: Permite generar nombres de sexo femenino</li><li><code>MASCULINO</code>: Permite generar nombres de sexo masculino</li><li><code>ALEATORIO</code>: Permite generar nombres tanto de sexo femenino como masculino</li></ul><h3 id="complejidad" tabindex="-1"><a class="header-anchor" href="#complejidad" aria-hidden="true">#</a> Complejidad</h3><p>Enum que permite modelar la complejidad de los nombres y apellidos a generar.</p><p>Las complejidades actualmente soportadas son:</p><ul><li><code>SIMPLE</code>: Permite generar nombres y apellidos simples; es decir, nombres y apellidos con una sola ocurrencia. Por ejemplo: - <b>Nombre Simple</b> -&gt; Juan - <b>Apellido Simple</b> -&gt; Rojas - <b>Nombre y Apellido Simples</b> -&gt; Juan Rojas</li><li><code>COMPUESTA</code>: Permite generar nombres y apellidos compuestos; es decir, nombres y apellidos con doble sola ocurrencia. Por ejemplo: <ul><li><b>Nombre Compuesto</b> -&gt; Juan Alejandro</li><li><b>Apellido compuesto</b> -&gt; Rojas Rosales</li><li><b>Nombre y Apellido compuestos</b> -&gt; Juan Alejandro Rojas Rosales</li></ul></li><li><code>ALEATORIA</code>: Permite generar nombres y apellidos tanto simples como compuestos; es decir, nombres y apellidos con una o doble ocurrencia.</li></ul><h2 id="codigo-fuente" tabindex="-1"><a class="header-anchor" href="#codigo-fuente" aria-hidden="true">#</a> Código Fuente</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">GeneradorNombres</span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">GeneradorNombres</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> cantNombresFemeninos <span class="token operator">=</span> <span class="token number">2001</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> cantNombresMasculinos <span class="token operator">=</span> <span class="token number">1599</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> cantNombres <span class="token operator">=</span> cantNombresFemeninos<span class="token operator">+</span>cantNombresMasculinos<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> cantApellidos <span class="token operator">=</span> <span class="token number">4908</span><span class="token punctuation">;</span>

	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generarNombres</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span> sexo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>sexo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token constant">FEMENINO</span><span class="token operator">:</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_FEMENINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">MASCULINO</span><span class="token operator">:</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_MASCULINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">ALEATORIO</span><span class="token operator">:</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_FEMENINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_MASCULINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Parametros erroneos&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">return</span> s<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generarNombres</span><span class="token punctuation">(</span><span class="token keyword">int</span> cantidad<span class="token punctuation">,</span> <span class="token class-name">Sexo</span> sexo<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token function">generarNombres</span><span class="token punctuation">(</span>sexo<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
		s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> cantidad<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> s<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generarApellidos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generarApellidos</span><span class="token punctuation">(</span><span class="token keyword">int</span> cantidad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token function">generarApellidos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
		s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> cantidad<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> s<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generarNombre</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span> <span class="token class-name">Complejidad</span> complejidad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> respuesta<span class="token punctuation">;</span>
		<span class="token keyword">switch</span><span class="token punctuation">(</span>sexo<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token constant">FEMENINO</span><span class="token operator">:</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_FEMENINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">MASCULINO</span><span class="token operator">:</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_MASCULINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token constant">ALEATORIO</span><span class="token operator">:</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_MASCULINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			s<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">ProveedorNombres</span><span class="token punctuation">.</span><span class="token constant">NOMBRES_FEMENINOS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Sexo NULL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>complejidad<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">ALEATORIA</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			respuesta <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				respuesta<span class="token operator">+=</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>s<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span><span class="token punctuation">{</span>
			respuesta <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>complejidad<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">COMPUESTA</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				respuesta<span class="token operator">+=</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>s<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> respuesta<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generarApellido</span><span class="token punctuation">(</span><span class="token class-name">Complejidad</span> complejidad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> s<span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>complejidad<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">ALEATORIA</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			s <span class="token operator">=</span> <span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				s<span class="token operator">+=</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span><span class="token punctuation">{</span>
			s <span class="token operator">=</span> <span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>complejidad<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Complejidad</span><span class="token punctuation">.</span><span class="token constant">COMPUESTA</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				s<span class="token operator">+=</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token class-name">ProveedorApellidos</span><span class="token punctuation">.</span><span class="token constant">APELLIDOS</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> s<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">generarNombreYApellidos</span><span class="token punctuation">(</span><span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span> <span class="token class-name">Complejidad</span> complejidadNombre<span class="token punctuation">,</span> <span class="token class-name">Complejidad</span> complejidadApellido<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">generarNombre</span><span class="token punctuation">(</span>sexo<span class="token punctuation">,</span> complejidadNombre<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span><span class="token function">generarApellido</span><span class="token punctuation">(</span>complejidadApellido<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">generarListadoNombreYApellidos</span><span class="token punctuation">(</span><span class="token keyword">int</span> cantidad<span class="token punctuation">,</span> <span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span><span class="token class-name">Complejidad</span> complejidadNombre<span class="token punctuation">,</span> <span class="token class-name">Complejidad</span> complejidadApellido<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cantidad<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">generarNombreYApellidos</span><span class="token punctuation">(</span>sexo<span class="token punctuation">,</span> complejidadNombre<span class="token punctuation">,</span> complejidadApellido<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> s<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">generarInformeListadoNombreYApellidos</span><span class="token punctuation">(</span><span class="token keyword">int</span> cantidad<span class="token punctuation">,</span> <span class="token class-name">Sexo</span> sexo<span class="token punctuation">,</span><span class="token class-name">Complejidad</span> complejidadNombre<span class="token punctuation">,</span> <span class="token class-name">Complejidad</span> complejidadApellido<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">File</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;Listado_Nombre_y_Apellidos_Generados.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		f<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			f<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">PrintWriter</span> pw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> <span class="token function">generarListadoNombreYApellidos</span><span class="token punctuation">(</span>cantidad<span class="token punctuation">,</span> sexo<span class="token punctuation">,</span> complejidadNombre<span class="token punctuation">,</span> complejidadApellido<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				pw<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Ruta del archivo generado: &quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user.dir&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/Listado_Nombre_y_Apellidos_Generados.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
	<span class="token punctuation">}</span>


	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">enum</span> <span class="token class-name">Complejidad</span> <span class="token punctuation">{</span>
		<span class="token constant">SIMPLE</span><span class="token punctuation">,</span>
		<span class="token constant">COMPUESTA</span><span class="token punctuation">,</span>
		<span class="token constant">ALEATORIA</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="clases-utilizadas-importaciones" tabindex="-1"><a class="header-anchor" href="#clases-utilizadas-importaciones" aria-hidden="true">#</a> Clases utilizadas (Importaciones)</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">PrintWriter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38);function b(v,g){const s=l("router-link");return i(),u("div",null,[r,n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#indice-de-contenido"},{default:e(()=>[t("Índice de contenido")]),_:1})]),n("li",null,[a(s,{to:"#piscinas-de-datos"},{default:e(()=>[t("Piscinas de Datos")]),_:1})]),n("li",null,[a(s,{to:"#metodos-implementados"},{default:e(()=>[t("Métodos implementados")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#generar-nombre-dado-sexo-y-complejidad"},{default:e(()=>[t("Generar nombre dado Sexo y Complejidad")]),_:1})]),n("li",null,[a(s,{to:"#generar-todos-los-nombres-dado-sexo"},{default:e(()=>[t("Generar todos los nombres dado Sexo")]),_:1})]),n("li",null,[a(s,{to:"#generar-una-parte-de-todos-los-nombres-dados-cantidad-y-sexo"},{default:e(()=>[t("Generar una parte de todos los nombres dados cantidad y Sexo")]),_:1})]),n("li",null,[a(s,{to:"#generar-todos-los-apellidos"},{default:e(()=>[t("Generar todos los apellidos")]),_:1})]),n("li",null,[a(s,{to:"#generar-una-parte-de-todos-los-apellidos-dado-una-cantidad"},{default:e(()=>[t("Generar una parte de todos los apellidos dado una cantidad")]),_:1})]),n("li",null,[a(s,{to:"#generar-un-apellido-dado-complejidad"},{default:e(()=>[t("Generar un apellido dado Complejidad")]),_:1})]),n("li",null,[a(s,{to:"#generar-un-nombre-completo-dado-sexo-complejidad-del-nombre-y-complejidad-del-apellido"},{default:e(()=>[t("Generar un nombre completo dado Sexo, Complejidad del nombre y Complejidad del apellido")]),_:1})]),n("li",null,[a(s,{to:"#generar-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido"},{default:e(()=>[t("Generar listado de nombres completos dados cantidad, Sexo, Complejidad del nombre y Complejidad del apellido")]),_:1})]),n("li",null,[a(s,{to:"#generar-informe-txt-del-listado-de-nombres-completos-dados-cantidad-sexo-complejidad-del-nombre-y-complejidad-del-apellido"},{default:e(()=>[t("Generar Informe txt del listado de nombres completos dados cantidad, Sexo, Complejidad del nombre y Complejidad del apellido")]),_:1})])])]),n("li",null,[a(s,{to:"#enums"},{default:e(()=>[t("Enums")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#sexo"},{default:e(()=>[t("Sexo")]),_:1})]),n("li",null,[a(s,{to:"#complejidad"},{default:e(()=>[t("Complejidad")]),_:1})])])]),n("li",null,[a(s,{to:"#codigo-fuente"},{default:e(()=>[t("Código Fuente")]),_:1})]),n("li",null,[a(s,{to:"#clases-utilizadas-importaciones"},{default:e(()=>[t("Clases utilizadas (Importaciones)")]),_:1})])])]),m])}const f=c(d,[["render",b],["__file","GeneradorNombres.html.vue"]]);export{f as default};
